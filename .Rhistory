runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
output$linerev <- renderPlot({
x    <- Revenue$Year
Yearrevline <- seq(min(x), max(x), length.out = input$Yearrevline)
totalrev <- Yearrevline + min(input)
# draw the histogram with the specified number of bins
revenue(input$Yearrevline, Revenue) %>% group_by(Year, Quarter) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
})
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
View(Revenue)
View(Revenue)
View(Revenue)
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
knitr::opts_chunk$set(echo = TRUE)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
View(Revenue)
View(jaartotaal)
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% filter(Year == c(2015, 2016,2017)) %>% mutate(totaal = sum(`1000_revenue`[Year]))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% mutate(totaal = sum(`1000_revenue`[Year]))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% mutate(totaal = sum(`Automotive Revenues Tesla`[Year]))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% mutate(totaal = sum(`Automotive Revenues Tesla`))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% mutate(totaal = sum(Year))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% filter(-Quarter)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% Select(-Quarter)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% select(-Quarter)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% select(-Quarter) %>% mutate(total = sum(`1000_revenue`))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% select(-Quarter) %>% group_by(Year) %>% mutate(total = sum(`1000_revenue`))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(total = sum(`Automotive Revenues`))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(total = sum(`1000_revenue`))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(total = sum(`Automotive Revenues Tesla`)/1000)
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(total = sum(`Automotive Revenues Tesla`)/1000) %>% select(Year, total)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(total = sum(`Automotive Revenues Tesla`)/1000) %>% select(Year, total)%>% distinct()
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(total = sum(`Automotive Revenues Tesla`,na.rm = TRUE)/1000) %>% select(Year, total)%>% distinct()
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(as.numeric(total = sum(`Automotive Revenues Tesla`,na.rm = TRUE)/1000)) %>% select(Year, total)%>% distinct()
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE)/1000)) %>% select(Year, total)%>% distinct()
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct()
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct() %>% ggplot(aes(x = Year , y = `1000_revenue`))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct() %>% ggplot(aes(x = Year , y = total))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct() %>% filter(Year == c(2015,2016,2017)) %>% ggplot(aes(x = Year , y = total))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct() %>% filter(Year = c(2015,2016,2017)) %>% ggplot(aes(x = Year , y = total))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% filter(Year = c(2015,2016,2017)) %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct()  %>% ggplot(aes(x = Year , y = total))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% filter(Year == c(2015,2016,2017)) %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct()  %>% ggplot(aes(x = Year , y = total))+ geom_line() +
labs(y = 'Automotive revenue')  +
scale_y_continuous(breaks = seq(0,8000, by= 1000))
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
?scale_y_continuous
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct()
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Revenue %>% group_by(Year) %>% mutate(total = as.numeric(sum(`Automotive Revenues Tesla`,na.rm = TRUE))) %>% select(Year, total)%>% distinct()
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
=======
library(shinydashboard)
superchargers <- read_xlsx("Data/Superchargers.xlsx")
superchargers <- superchargers %>% separate(GPS, sep = ",", into = c("Latitude", "Longitude"))
superchargers$Longitude <- as.double(superchargers$Longitude)
superchargers$Latitude <- as.double(superchargers$Latitude)
superchargers$id <- seq.int(nrow(superchargers))
superchargers$Year <- format(superchargers$'Open Date', format="%Y")
superchargers <- data.frame(superchargers)
verkoo <- read_xlsx("Data/Yearly Tesla Sales Country Split (Europe).xlsx")
verkoo$'2013' <- as.numeric(verkoo$'2013')
verkoo$'2014' <- as.numeric(verkoo$'2014')
verkoo$'2015' <- as.numeric(verkoo$'2015')
verkoo$'2016' <- as.numeric(verkoo$'2016')
verkoo$'2017' <- as.numeric(verkoo$'2017')
verkoo$'2018' <- as.numeric(verkoo$'2018')
verkoo$'2019' <- as.numeric(verkoo$'2019')
verkoo <- verkoo %>% gather('2013':'2019',key = "Year", value = "Sales")
#str(verkoo)
verkoo$Year <- as.integer(verkoo$Year)
verkoo$Sales <- as.integer(verkoo$Sales)
#str(superchargers)
str(verkoo)
verkoo <- data.frame(verkoo)
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(verkoo$Country %in% list, Year == 2019)
superchargersC <- superchargers %>% filter(Year < 2020, Status == 'OPEN', Country %in% list)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
library(readxl)
library(maps)
library(ggplot2)
library(tidyr)
library(plyr)
library(dplyr)
library(lubridate)
library(ggmap)
library(mapdata)
library(mapproj)
library(sf)
library(rnaturalearth)
library(hrbrthemes)
library(grid)
library(rworldmap)
library(shiny)
library(plotly)
library(leaflet)
library(shinydashboard)
superchargers <- read_xlsx("Data/Superchargers.xlsx")
superchargers <- superchargers %>% separate(GPS, sep = ",", into = c("Latitude", "Longitude"))
superchargers$Longitude <- as.double(superchargers$Longitude)
superchargers$Latitude <- as.double(superchargers$Latitude)
superchargers$id <- seq.int(nrow(superchargers))
superchargers$Year <- format(superchargers$'Open Date', format="%Y")
superchargers <- data.frame(superchargers)
verkoo <- read_xlsx("Data/Yearly Tesla Sales Country Split (Europe).xlsx")
verkoo$'2013' <- as.numeric(verkoo$'2013')
verkoo$'2014' <- as.numeric(verkoo$'2014')
verkoo$'2015' <- as.numeric(verkoo$'2015')
verkoo$'2016' <- as.numeric(verkoo$'2016')
verkoo$'2017' <- as.numeric(verkoo$'2017')
verkoo$'2018' <- as.numeric(verkoo$'2018')
verkoo$'2019' <- as.numeric(verkoo$'2019')
verkoo <- verkoo %>% gather('2013':'2019',key = "Year", value = "Sales")
#str(verkoo)
verkoo$Year <- as.integer(verkoo$Year)
verkoo$Sales <- as.integer(verkoo$Sales)
#str(superchargers)
#str(verkoo)
verkoo <- data.frame(verkoo)
str(verkoo)
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
superchargersC <- superchargers %>% filter(Year < 2020, Status == 'OPEN', Country %in% list)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
str(verkooC)
superchargersC <- superchargers %>% filter(Year < 2020, Status == 'OPEN', Country %in% list)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
#str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
str(superchargersC)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
#str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
#str(superchargersC)
superchargersC <- count(superchargersC, "Country")
str(superchargersC)
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
#str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
#str(superchargersC)
superchargersC <- plyr::count(superchargersC, "Country")
str(superchargersC)
ratio <- full_join(superchargersC, verkooC, by = 'Country')
runApp('Dashboard_Caro')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
VPS <- read_xlsx("Data/New cars sold in the EU by segment in million units.xlsx")
VPS <- VPS %>% gather('2008':'2019', key=  "Year", value="Sales")
summary(VPS)
VPS$Year <- as.numeric(VPS$Year)
VPS$Sales <- as.double(VPS$Sales)
VPS %>% ggplot(aes(x=Year, y=Sales)) + geom_line(aes(color = Segment)) + labs(title = "New cars sold in the EU by segment in million units over the years.") + scale_x_continuous(breaks = c(2008:2019)) + scale_y_continuous(breaks= seq(0,6, by = 1))
#x-as moet gaan van 2008-2019
VPS %>% ggplot(aes(x = Segment, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "New cars sold in the EU by segment in million units for each year.") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
>>>>>>> 2fd6ae77da1b4fe88d19459ee7e5325ed9607b69
shiny::runApp('Dashboard_Caro')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Caro')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
install.packages('RSQLite')
install.packages("RSQLite")
install.packages("RSQLite")
install.packages(c("backports", "dbplyr", "digest"))
install.packages(c("backports", "dbplyr", "digest"))
install.packages(c("backports", "dbplyr", "digest"))
shiny::runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
View(countriesafinfrastructure)
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Caro')
runApp('Dashboard_Jaske')
?skin
?status
??status
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
?icon
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
#uitbreiding in europa tabblad
countriesafpassengercars <- read_xlsx("Data/Countries overview of af passenger cars.xlsx", skip = 2 , col_types = c("numeric", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
#financiele cijfers
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
#uitbreiding europa
countriesafpassengercars <- read_xlsx("Data/Countries overview of af passenger cars.xlsx", skip = 2 , col_types = c("numeric", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
countriesafinfrastructure <- read_xlsx("Data/countries overview of af infrastructure.xlsx", skip = 2 , col_types = c("numeric", "text", "numeric", "numeric", "numeric", "numeric", "numeric"))
#financiele cijfers, functies
revenue <- function(yearinput,df) {
revenue <- df %>% filter(df$Year == yearinput)
return(revenue)
}
#uitbreiding europa, data in juiste vorm krijgen
countriesafpassengercars <- countriesafpassengercars %>% gather('BEV', 'H2', 'CNG', 'LNG', 'PHEV', 'LPG', 'Total', key = 'Fuel', value = 'waardes')
countriesafpassengercars$Country[1:2457] <- c('Ausria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia',
'Finland', 'France', 'Germany', 'Greece', 'Hungria', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia',
'Spain', 'Sweden')
countriesafinfrastructure <- countriesafinfrastructure %>% gather('Electricity', 'H2', 'Natural Gas', 'LPG', 'Total', key = 'Fuel', value = 'waardes')
countriesafinfrastructure$Country[1:1755] <- c('Ausria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia',
'Finland', 'France', 'Germany', 'Greece', 'Hungria', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia',
'Spain', 'Sweden')
runApp('Dashboard_Lien')
View(Revenue)
shiny::runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
library(shiny)
library(readxl)
library(ggplot2)
library(tidyr)
library(shinydashboard)
library(dplyr)
library(tidyr)
library(lubridate)
library(readr)
library(plotly)
library(scales)
library(ggiraph)
library(maps)
library(RColorBrewer)
library(shiny)
library(readxl)
library(ggplot2)
library(tidyr)
library(shinydashboard)
library(dplyr)
library(tidyr)
library(lubridate)
library(readr)
library(plotly)
library(scales)
library(ggiraph)
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
shiny::runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
