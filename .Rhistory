<<<<<<< HEAD
<<<<<<< HEAD
=======
<<<<<<< HEAD
countriesafpassengercars$Country[1:2457] <- c('Ausria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia',
'Finland', 'France', 'Germany', 'Greece', 'Hungria', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia',
'Spain', 'Sweden')
countriesafinfrastructure <- countriesafinfrastructure %>% gather('Electricity', 'H2', 'Natural Gas', 'LPG', 'Total', key = 'Fuel', value = 'waardes')
countriesafinfrastructure$Country[1:1755] <- c('Ausria', 'Belgium', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia',
'Finland', 'France', 'Germany', 'Greece', 'Hungria', 'Ireland', 'Italy', 'Latvia', 'Lithuania',
'Luxembourg', 'Malta', 'Netherlands', 'Poland', 'Portugal', 'Romania', 'Slovakia', 'Slovenia',
'Spain', 'Sweden')
#wereldkaart
teslapercountrysales <- read_xlsx("Data/Verkoop landen tesla.xlsx", skip = 1, col_types = c("text", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric")) %>% gather('2013', '2014', '2015', '2016', '2017', '2018', '2019', key = 'jaar', value = 'waarde')
some.eu.countries <- c('Ukraine', 'France', 'Spain', 'Sweden', 'Norway', 'Germany', 'Finland', 'Poland', 'Italy', 'UK', 'Romania', 'Belarus', 'Greece', 'Bulgaria', 'Iceland', 'Hungary', 'Portugal', 'Austria', 'Czech Republic', 'Serbia', 'Ireland', 'Lithuania', 'Latvia', 'Croatia', 'Bosnia and Herzegovina', 'Slovakia', 'Estonia', 'Denmark', 'Netherlands', 'Switzerland', 'Moldova', 'Belgium', 'Armenia', 'Albania', 'Macedonia', 'Turkey', 'Slovenia', 'Montenegro', 'Kosovo', 'Cyprus', 'Luxembourg', 'Georgia', 'Andorra', 'Malta', 'Liechtenstein', 'San Marino', 'Monaco', 'Vatican')
some.eu.map <- map_data("world", region = some.eu.countries)
tesla.eu.map <- left_join(some.eu.map, teslapercountrysales, by = "region")
=======
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
str(verkooC)
superchargersC <- superchargers %>% filter(Year < 2020, Status == 'OPEN', Country %in% list)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
#str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
str(superchargersC)
superchargersC <- count(superchargersC, "Country")
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
#str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
#str(superchargersC)
superchargersC <- count(superchargersC, "Country")
str(superchargersC)
ratio <- full_join(superchargersC, verkooC, by = 'Country')
list <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Greece", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Portugal", "Romania", "Slovenia", "Spain", "Sweden", "Switzerland")
verkooC <- verkoo %>% dplyr::filter(Country %in% list, Year == 2019)
#str(verkooC)
superchargersC <- superchargers %>% dplyr::filter(Year < 2020, Status == 'OPEN', Country %in% list)
#str(superchargersC)
superchargersC <- plyr::count(superchargersC, "Country")
str(superchargersC)
ratio <- full_join(superchargersC, verkooC, by = 'Country')
runApp('Dashboard_Caro')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
VPS <- read_xlsx("Data/New cars sold in the EU by segment in million units.xlsx")
VPS <- VPS %>% gather('2008':'2019', key=  "Year", value="Sales")
summary(VPS)
VPS$Year <- as.numeric(VPS$Year)
VPS$Sales <- as.double(VPS$Sales)
VPS %>% ggplot(aes(x=Year, y=Sales)) + geom_line(aes(color = Segment)) + labs(title = "New cars sold in the EU by segment in million units over the years.") + scale_x_continuous(breaks = c(2008:2019)) + scale_y_continuous(breaks= seq(0,6, by = 1))
#x-as moet gaan van 2008-2019
VPS %>% ggplot(aes(x = Segment, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "New cars sold in the EU by segment in million units for each year.") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
shiny::runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
View(nieuw)
shiny::runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
=======
<<<<<<< HEAD
library(readr)
library(plotly)
library(maps)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
Revenuetabel <- Revenue %>% group_by(Year) %>%
mutate("totalrevenue" = sum(`Automotive Revenues Tesla`, na.rm = TRUE)/1000000)
Free_cashflow <- Free_cashflow %>% group_by(Year) %>%
mutate("totalfreecashflow" = sum(`free cash flow`, na.rm = TRUE)/1000000)
Gross_profit <- Gross_profit %>% group_by(Year) %>%
mutate("totalgrossprofit" = sum(`Automotive gross profit GAAP`, na.rm = TRUE)/1000000)
Gross_Margin <- Gross_Margin %>% group_by(Year) %>%
mutate("totalgrossmargin" = sum(`Gross margin Automotive GAAP`, na.rm = TRUE))
Revenuetabel <- Revenuetabel %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_profit <- Gross_profit %>% unite(Year, Quarter, col = "Date", sep = " ")
Free_cashflow <- Free_cashflow %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_Margin <- Gross_Margin %>% unite(Year, Quarter, col = "Date", sep = " ")
Revenuetabel <- rename(Revenuetabel, c("Revenue" = "Automotive Revenues Tesla"))
Gross_profit <- Gross_profit %>% rename(c("Gross Profit"= "Automotive gross profit GAAP"))
Gross_Margin <- Gross_Margin %>% rename( c("Gross Margin" = "Gross margin Automotive GAAP"))
Revenuetabelnorm <- Revenuetabel %>% select(Date, Revenue)
Gross_profitnorm <- Gross_profit %>% select(Date, `Gross profit`)
Gross_Marginnorm <- Gross_Margin %>% select(Date, `Gross Margin`)
Free_cashflownorm <- Free_cashflow %>% select(Date, `free cash flow`)
Revenuetabelsum <- Revenuetabel %>% select(Date, totalrevenue)
Gross_profitsum <- Gross_profit %>% select(Date, totalgrossprofit)
Gross_Marginsum <- Gross_Margin %>% select(Date, totalgrossmargin)
Free_cashflowsum <- Free_cashflow %>% select(Date, totalfreecashflow)
Financial_numbersnorm <- left_join(Revenuetabelnorm, Gross_profitnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Gross_Marginnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Free_cashflownorm, by = "Date")
Financial_numbersnorm <- Financial_numbersnorm %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numbersnorm$'Year' <- as.numeric(Financial_numbersnorm$'Year')
Financial_numbersnorm$'Revenue' <- as.numeric(Financial_numbersnorm$'Revenue')
Financial_numbersnorm$'Gross Profit' <- as.numeric(Financial_numbersnorm$'Gross Profit')
=======
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
>>>>>>> d65ccaee402a9f9fbc60089d4dadf805ce12194b
shiny::runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Lien')
knitr::opts_chunk$set(echo = TRUE)
>>>>>>> 08a125660160972c09a52618cccc5a1acf7c00ec
=======
<<<<<<< HEAD
shiny::runApp('Dashboard_Jaske')
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(readxl)
library(ggplot2)
library(tidyr)
library(shinydashboard)
library(dplyr)
library(tidyr)
library(lubridate)
library(readr)
library(plotly)
library(maps)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
Revenuetabel <- Revenue %>% group_by(Year) %>%
mutate("totalrevenue" = sum(`Automotive Revenues Tesla`, na.rm = TRUE)/1000000)
Free_cashflow <- Free_cashflow %>% group_by(Year) %>%
mutate("totalfreecashflow" = sum(`free cash flow`, na.rm = TRUE)/1000000)
Gross_profit <- Gross_profit %>% group_by(Year) %>%
mutate("totalgrossprofit" = sum(`Automotive gross profit GAAP`, na.rm = TRUE)/1000000)
Gross_Margin <- Gross_Margin %>% group_by(Year) %>%
mutate("totalgrossmargin" = sum(`Gross margin Automotive GAAP`, na.rm = TRUE))
Revenuetabel <- Revenuetabel %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_profit <- Gross_profit %>% unite(Year, Quarter, col = "Date", sep = " ")
Free_cashflow <- Free_cashflow %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_Margin <- Gross_Margin %>% unite(Year, Quarter, col = "Date", sep = " ")
Revenuetabel <- rename(Revenuetabel, c("Revenue" = "Automotive Revenues Tesla"))
Gross_profit <- Gross_profit %>% rename(c("Gross Profit"= "Automotive gross profit GAAP"))
Gross_Margin <- Gross_Margin %>% rename( c("Gross Margin" = "Gross margin Automotive GAAP"))
Revenuetabelnorm <- Revenuetabel %>% select(Date, Revenue)
Gross_profitnorm <- Gross_profit %>% select(Date, `Gross Profit`)
Gross_Marginnorm <- Gross_Margin %>% select(Date, `Gross Margin`)
Free_cashflownorm <- Free_cashflow %>% select(Date, `free cash flow`)
Revenuetabelsum <- Revenuetabel %>% select(Date, totalrevenue)
Gross_profitsum <- Gross_profit %>% select(Date, totalgrossprofit)
Gross_Marginsum <- Gross_Margin %>% select(Date, totalgrossmargin)
Free_cashflowsum <- Free_cashflow %>% select(Date, totalfreecashflow)
Financial_numbersnorm <- left_join(Revenuetabelnorm, Gross_profitnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Gross_Marginnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Free_cashflownorm, by = "Date")
Financial_numbersnorm <- Financial_numbersnorm %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numbersnorm$'Year' <- as.numeric(Financial_numbersnorm$'Year')
Financial_numbersnorm$'Revenue' <- as.numeric(Financial_numbersnorm$'Revenue')
Financial_numbersnorm$'Gross Profit' <- as.numeric(Financial_numbersnorm$'Gross Profit')
Financial_numbersnorm$'Gross Margin' <- as.numeric(Financial_numbersnorm$'Gross Margin')
Financial_numbersnorm$'free cash flow' <- as.numeric(Financial_numbersnorm$'free cash flow')
Financial_numbers_gather_norm <- Financial_numbersnorm %>% gather('Revenue', 'Gross Profit', 'Gross Margin', 'free cash flow', key = 'typenumber', value = 'finvalue')
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(readxl)
library(ggplot2)
library(tidyr)
library(shinydashboard)
library(dplyr)
library(tidyr)
library(lubridate)
<<<<<<< HEAD
library(readr)
library(plotly)
library(maps)
=======
library(readxl)
evcp <- read_excel("Data/PEV's per public charging point.xlsx", skip = 2)
View(evcp)
str(evcp)
evcp <- evcp %>% select(Year, Total)
str(evcp)
write.csv(evcp)
write.csv(evcp, "Data/evcp")
evcp %>% ggplot(aes(Year)) + geom_histogram(aes(Total))
evcp %>% ggplot(aes(Year, Total)) + geom_histogram()
evcp %>% ggplot(aes(Year, Total)) + geom_bar()
evcp %>% ggplot(aes(Year)) + geom_bar()
evcp %>% ggplot(aes(Year)) + geom_histogram()
evcp %>% ggplot(aes(Year)) + geom_col(aes(Total))
evcp %>% ggplot(aes(Year, Total)) + geom_col()
View(evcp)
shiny::runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
?%in%
runApp('Dashboard_Pieter')
shiny::runApp('Dashboard_Jaske')
shiny::runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
knitr::opts_chunk$set(echo = TRUE)
str(hev1)
nrow(hev1)
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge", ylab("Number of respondents")) +
scale_y_continuous(limits = c(0, 6000))
knitr::opts_chunk$set(echo = TRUE)
=======
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
#uitbreiding in europa tabblad
countriesafpassengercars <- read_xlsx("Data/Countries overview of af passenger cars.xlsx", skip = 2 , col_types = c("numeric", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
#Caro
#Map + table01 + infoboxen
superchargers <- read_xlsx("Data/Superchargers.xlsx")
superchargers <- superchargers %>% separate(GPS, sep = ",", into = c("Latitude", "Longitude"))
superchargers$Longitude <- as.double(superchargers$Longitude)
superchargers$Latitude <- as.double(superchargers$Latitude)
superchargers$id <- seq.int(nrow(superchargers))
superchargers$Year <- format(superchargers$'Open Date', format="%Y")
superchargers <- data.frame(superchargers)
aantal <- plyr::count(superchargers, "Status")
#Histogram01
verkoo <- read_xlsx("Data/Yearly Tesla Sales Country Split (Europe).xlsx")
verkoo$'2013' <- as.numeric(verkoo$'2013')
verkoo$'2014' <- as.numeric(verkoo$'2014')
verkoo$'2015' <- as.numeric(verkoo$'2015')
verkoo$'2016' <- as.numeric(verkoo$'2016')
verkoo$'2017' <- as.numeric(verkoo$'2017')
verkoo$'2018' <- as.numeric(verkoo$'2018')
verkoo$'2019' <- as.numeric(verkoo$'2019')
verkoo <- verkoo %>% gather('2013':'2019',key = "Year", value = "Sales")
verkoo$Year <- as.integer(verkoo$Year)
verkoo$Sales <- as.integer(verkoo$Sales)
verkoo <- data.frame(verkoo)
#Concurrentie
ionity <- read_xlsx("Data/ionity_locations.xlsx")
ionity$Supercharger <- ionity$name
ionity$Stalls <- ionity$charger_count
ionity$Open.Date <- ionity$golive
ionity$Latitude <- ionity$coords.lat
ionity$Longitude <- ionity$coords.lng
ionity$Status <- ionity$description
ionity$Description <- ionity$title
ionity$Country <- ionity$geo_state.country
ionity$City <- ionity$city
ionity$State <- ionity$geo_state.name_en
ionity <- ionity %>% filter(Status != 'now building' | Status != 'Now building')
ionity <- ionity %>% select(Supercharger, Stalls, Latitude, Longitude, Description, City, State, Country, Open.Date)
teslapalen <- superchargers %>% mutate(Description = 'Tesla') %>% filter(Status == 'OPEN') %>% select(Supercharger, Stalls, Latitude, Longitude, Description, City, State, Country, Open.Date)
ionity$Open.Date <- as.POSIXct(ionity$Open.Date, format = "%Y-%m-%d %H:%M")
laadpalen <- bind_rows(ionity, teslapalen)
laadpalen$Country <- as.factor(laadpalen$Country)
taart <- plyr::count(laadpalen, "Description")
laadpalen <- plyr::count(laadpalen, c("Description", "Country"))
taart <- taart %>% dplyr::mutate(ratio = round(freq/sum(freq)*100))
#Groei: verkoop alle merken per segment
VPS <- read_xlsx("Data/New cars sold in the EU by segment in million units.xlsx")
VPS <- VPS %>% gather('2008':'2019', key=  "Year", value="Sales")
VPS$Year <- as.numeric(VPS$Year)
VPS$Sales <- as.double(VPS$Sales)
#Groei: aandeel elektrische auto's op belgische en eu markt
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
tweedehands <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Tweedehands")
eu <- read_xlsx("Data/% share of new passenger cars by fuel type in the EU.xlsx")
NieuwMS <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
NieuwMS$Year <- recode(NieuwMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- as.integer(Nieuw$Year)
NieuwMS$Year <- as.integer(NieuwMS$Year)
NieuwMS$Market.Share <- as.double(NieuwMS$Market.Share)
TweedehandsMS <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS$Year <- recode(TweedehandsMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Tweedehands$Year <- as.integer(Tweedehands$Year)
TweedehandsMS$Year <- as.integer(TweedehandsMS$Year)
TweedehandsMS$Market.Share <- as.double(TweedehandsMS$Market.Share)
EuMS <- eu %>% gather('2016', '2017', '2018', '2019',key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
EuMS$Year <- as.integer(EuMS$Year)
EuMS$Market.Share <- as.double(EuMS$Market.Share)
#Klanten: aankoopproces
aankoopproces <- read_xlsx("Data/Online.xlsx")
aankoopproces <- aankoopproces %>% gather(`Not at all interested/not very interested`:`Somewhat interested/very interested`, key = "Interest", value="Percentage")
#Verkoop: periodieke tesla verkoop
data <- read_xlsx("Data/Monthly Tesla Vehicle Sales.xlsx")
Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
Data$Year <- as.factor(Data$Year)
#Lien
#financiele cijfers
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
Revenuetabel <- Revenue %>% group_by(Year) %>%
mutate("totalrevenue" = sum(`Automotive Revenues Tesla`, na.rm = TRUE)/1000000)
Free_cashflow <- Free_cashflow %>% group_by(Year) %>%
mutate("totalfreecashflow" = sum(`free cash flow`, na.rm = TRUE)/1000000)
Gross_profit <- Gross_profit %>% group_by(Year) %>%
mutate("totalgrossprofit" = sum(`Automotive gross profit GAAP`, na.rm = TRUE)/1000000)
Gross_Margin <- Gross_Margin %>% group_by(Year) %>%
mutate("totalgrossmargin" = sum(`Gross margin Automotive GAAP`, na.rm = TRUE))
Revenuetabel <- Revenuetabel %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_profit <- Gross_profit %>% unite(Year, Quarter, col = "Date", sep = " ")
Free_cashflow <- Free_cashflow %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_Margin <- Gross_Margin %>% unite(Year, Quarter, col = "Date", sep = " ")
Revenuetabel <- rename(Revenuetabel, c("Revenue" = "Automotive Revenues Tesla"))
Gross_profit <- Gross_profit %>% rename(c("Gross Profit"= "Automotive gross profit GAAP"))
Gross_Margin <- Gross_Margin %>% rename( c("Gross Margin" = "Gross margin Automotive GAAP"))
Revenuetabelnorm <- Revenuetabel %>% select(Date, Revenue)
Gross_profitnorm <- Gross_profit %>% select(Date, `Gross Profit`)
Gross_Marginnorm <- Gross_Margin %>% select(Date, `Gross Margin`)
Free_cashflownorm <- Free_cashflow %>% select(Date, `free cash flow`)
Revenuetabelsom <- Revenuetabel %>% select(Date, totalrevenue)
Gross_profitsom <- Gross_profit %>% select(Date, totalgrossprofit)
Gross_Marginsom <- Gross_Margin %>% select(Date, totalgrossmargin)
Free_cashflowsom <- Free_cashflow %>% select(Date, totalfreecashflow)
Financial_numbersnorm <- left_join(Revenuetabelnorm, Gross_profitnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Gross_Marginnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Free_cashflownorm, by = "Date")
Financial_numbersnorm <- Financial_numbersnorm %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numbersnorm$'Year' <- as.numeric(Financial_numbersnorm$'Year')
Financial_numbersnorm$'Revenue' <- as.numeric(Financial_numbersnorm$'Revenue')
Financial_numbersnorm$'Gross Profit' <- as.numeric(Financial_numbersnorm$'Gross Profit')
Financial_numbersnorm$'Gross Margin' <- as.numeric(Financial_numbersnorm$'Gross Margin')
Financial_numbersnorm$'free cash flow' <- as.numeric(Financial_numbersnorm$'free cash flow')
Financial_numbers_gather_norm <- Financial_numbersnorm %>% gather('Revenue', 'Gross Profit', 'Gross Margin', 'free cash flow', key = 'typenumber', value = 'finvalue')
Financial_numberssom <- left_join(Revenuetabelsom, Gross_profitsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Gross_Marginsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Free_cashflowsom, by = "Date")
Financial_numberssom <- Financial_numberssom %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numberssom$'Year' <- as.numeric(Financial_numberssom$'Year')
Financial_numberssom$'totalrevenue' <- as.numeric(Financial_numberssom$'totalrevenue')
Financial_numberssom$'totalgrossrofit' <- as.numeric(Financial_numberssom$'totalgrossprofit')
Financial_numberssom$'totalgrossmargin' <- as.numeric(Financial_numberssom$'totalgrossmargin')
Financial_numberssom$'totalfreecashflow' <- as.numeric(Financial_numberssom$'totalfreecashflow')
Financial_numbers_gather_som <- Financial_numberssom %>% gather('totalrevenue', 'totalgrossprofit', 'totalgrossmargin', 'totalfreecashflow', key = 'typenumber', value = 'finvalue') %>% distinct()
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(readxl)
library(ggplot2)
library(tidyr)
<<<<<<< HEAD
library(shinydashboard)
=======
>>>>>>> d65ccaee402a9f9fbc60089d4dadf805ce12194b
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
>>>>>>> 08a125660160972c09a52618cccc5a1acf7c00ec
library(dplyr)
library(tidyr)
library(lubridate)
<<<<<<< HEAD
library(readr)
=======
<<<<<<< HEAD
=======
<<<<<<< HEAD
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
hev <- read.csv2("Data/HEV_article_2018_filtered.csv")
View(hev)
str(hev)
hev <- hev %>% select(-Car_sharing_)
hev1 <- hev %>% mutate(Gender = as.factor(Gender),
Education_level = as.factor(Education_level),
Employment_status = as.factor(Employment_status),
Income_group = as.factor(Income_group),
Country = as.factor(Country),
buy_electric = as.logical(buy_electric),
Household_members_number = as.factor(Household_members_number),
Plan_to_purchase_vehicle = as.factor(Plan_to_purchase_vehicle))
levels(hev1$Gender) <- c("M", "F")
levels(hev1$Country) <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Netherlands",
"Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain",
"Sweden", "Great Britain", "Malta", "Luxembourg", "Cyprus")
levels(hev1$Education_level) <- c("Primary (elementary school)",
"Lower secondary (upper elementary school)",
"Upper secondary (high school)",
"Tertiary and higher (University degree or PhD)")
levels(hev1$Employment_status) <- c("Full time employed", "Part time employed", "Unemployed",
"Studying", "Retired", "Other", "I prefer not to answer")
levels(hev1$Household_members_number) <- c("one (myself)", "two", "three", "four", "five",
"more than five", "I prefer not to answer")
levels(hev1$Plan_to_purchase_vehicle) <- c("Yes, in the next 6 months",
"Yes, in the next 12 months",
"Yes, in the next 2 years", "No",
"Don’t know/no answer")
levels(hev1$Income_group) <- c("high", "higher middle", "middle", "lower middle", "low",
"I prefer not to answer")
hev1 %>% summary()
hev1 %>% ggplot(aes(Age)) + geom_bar(aes(fill = buy_electric), position = "fill")
hev1 %>% ggplot(aes(Gender)) + geom_bar(aes(fill = buy_electric), position = "dodge")
hev1 %>% ggplot(aes(Income_group)) + geom_bar(aes(fill = buy_electric), position = "dodge")
hev1 %>% filter(Country == "Belgium") %>% group_by(Country, Gender, buy_electric) %>% summarise(n = n(), median(Age)) %>% arrange(desc(n))
levels(hev1$Income_group)
hev1 %>% filter(Country == 'Belgium') %>%
ggplot(aes(Gender)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000))
hev1 %>% ggplot(aes(Employment_status)) +
<<<<<<< HEAD
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) + labs(y = "Number of respondents", fill = "Buy EV")
p1 <- hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) +
labs(y = "Number of respondents", fill = "Buy EV") + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplotly(p1)
hev1 %>% filter(Country == "Austria") %>% ggplot(aes(Plan_to_purchase_vehicle)) + geom_bar(aes(fill = buy_electric), position = "dodge") + labs(y = "Number of respondents", x = "Plan to buy car", fill = "Buy EV") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point() + labs(y = "Percentage of people willing to buy ev", x = "Countries") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(fill(Country %in% teslacountries)) + labs(y = "Percentage of people willing to buy ev", x = "Countries") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(fill(x %in% teslacountries)) + labs(y = "Percentage of people willing to buy ev", x = "Countries") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(fill(hev1$Country %in% teslacountries)) + labs(y = "Percentage of people willing to buy ev", x = "Countries") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(color = grepl(teslacountries)) + labs(y = "Percentage of people willing to buy ev", x = "Countries") + scale_color_discrete(labels = c("Tesla's sold", "not sold"))
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(color = grepl(teslacountries, "test")) + labs(y = "Percentage of people willing to buy ev", x = "Countries") + scale_color_discrete(labels = c("Tesla's sold", "not sold"))
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(color = grepl("^HFX", teslacountries)) + labs(y = "Percentage of people willing to buy ev", x = "Countries") + scale_color_discrete(labels = c("Tesla's sold", "not sold"))
knitr::opts_chunk$set(echo = TRUE)
=======
geom_bar(aes(fill = buy_electric), position = "dodge", ylab("Number of respondents")) +
scale_y_continuous(limits = c(0, 6000))
hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) + labs(y = "Number of respondents")
hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) + labs(y = "Number of respondents", fill = "Buy EV")
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
?dataTableOutput
?dataTable
?renderDataTable
shiny::runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
>>>>>>> a5e3763c92e6d1d86f40028056bd7788b6a2926e
runApp()
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
knitr::opts_chunk$set(echo = TRUE)
<<<<<<< HEAD
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
=======
=======
library(ggmap)
library(mapdata)
library(mapproj)
library(sf)
library(rnaturalearth)
library(hrbrthemes)
library(grid)
library(rworldmap)
>>>>>>> 08a125660160972c09a52618cccc5a1acf7c00ec
library(plotly)
library(maps)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
Revenuetabel <- Revenue %>% group_by(Year) %>%
mutate("totalrevenue" = sum(`Automotive Revenues Tesla`, na.rm = TRUE)/1000000)
Free_cashflow <- Free_cashflow %>% group_by(Year) %>%
mutate("totalfreecashflow" = sum(`free cash flow`, na.rm = TRUE)/1000000)
Gross_profit <- Gross_profit %>% group_by(Year) %>%
mutate("totalgrossprofit" = sum(`Automotive gross profit GAAP`, na.rm = TRUE)/1000000)
Gross_Margin <- Gross_Margin %>% group_by(Year) %>%
mutate("totalgrossmargin" = sum(`Gross margin Automotive GAAP`, na.rm = TRUE))
Revenuetabel <- Revenuetabel %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_profit <- Gross_profit %>% unite(Year, Quarter, col = "Date", sep = " ")
Free_cashflow <- Free_cashflow %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_Margin <- Gross_Margin %>% unite(Year, Quarter, col = "Date", sep = " ")
Revenuetabel <- rename(Revenuetabel, c("Revenue" = "Automotive Revenues Tesla"))
Gross_profit <- Gross_profit %>% rename(c("Gross Profit"= "Automotive gross profit GAAP"))
Gross_Margin <- Gross_Margin %>% rename( c("Gross Margin" = "Gross margin Automotive GAAP"))
Revenuetabelnorm <- Revenuetabel %>% select(Date, Revenue)
Gross_profitnorm <- Gross_profit %>% select(Date, `Gross Profit`)
Gross_Marginnorm <- Gross_Margin %>% select(Date, `Gross Margin`)
Free_cashflownorm <- Free_cashflow %>% select(Date, `free cash flow`)
Revenuetabelsom <- Revenuetabel %>% select(Date, totalrevenue)
Gross_profitsom <- Gross_profit %>% select(Date, totalgrossprofit)
Gross_Marginsom <- Gross_Margin %>% select(Date, totalgrossmargin)
Free_cashflowsom <- Free_cashflow %>% select(Date, totalfreecashflow)
Financial_numbersnorm <- left_join(Revenuetabelnorm, Gross_profitnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Gross_Marginnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Free_cashflownorm, by = "Date")
Financial_numbersnorm <- Financial_numbersnorm %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numbersnorm$'Year' <- as.numeric(Financial_numbersnorm$'Year')
Financial_numbersnorm$'Revenue' <- as.numeric(Financial_numbersnorm$'Revenue')
Financial_numbersnorm$'Gross Profit' <- as.numeric(Financial_numbersnorm$'Gross Profit')
Financial_numbersnorm$'Gross Margin' <- as.numeric(Financial_numbersnorm$'Gross Margin')
Financial_numbersnorm$'free cash flow' <- as.numeric(Financial_numbersnorm$'free cash flow')
Financial_numbers_gather_norm <- Financial_numbersnorm %>% gather('Revenue', 'Gross Profit', 'Gross Margin', 'free cash flow', key = 'typenumber', value = 'finvalue')
Financial_numberssom <- left_join(Revenuetabelsom, Gross_profitsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Gross_Marginsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Free_cashflowsom, by = "Date")
Financial_numberssom <- Financial_numberssom %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numberssom$'Year' <- as.numeric(Financial_numberssom$'Year')
Financial_numberssom$'totalrevenue' <- as.numeric(Financial_numberssom$'totalrevenue')
Financial_numberssom$'totalgrossrofit' <- as.numeric(Financial_numberssom$'totalgrossprofit')
Financial_numberssom$'totalgrossmargin' <- as.numeric(Financial_numberssom$'totalgrossmargin')
Financial_numberssom$'totalfreecashflow' <- as.numeric(Financial_numberssom$'totalfreecashflow')
Financial_numbers_gather_som <- Financial_numberssom %>% gather('totalrevenue', 'totalgrossprofit', 'totalgrossmargin', 'totalfreecashflow', key = 'typenumber', value = 'finvalue') %>% distinct()
Financial_numbers_gather_som
View(Financial_numberssom)
View(Financial_numberssom)
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(readxl)
library(ggplot2)
<<<<<<< HEAD
library(tidyr)
library(shinydashboard)
=======
>>>>>>> d65ccaee402a9f9fbc60089d4dadf805ce12194b
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
>>>>>>> a5e3763c92e6d1d86f40028056bd7788b6a2926e
library(dplyr)
library(ggplot2)
<<<<<<< HEAD
library(tidyr)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
tweedehands <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Tweedehands")
eu <- read_xlsx("Data/% share of new passenger cars by fuel type in the EU.xlsx")
ElectricMS <- nieuw %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric <- nieuw %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
NieuwMS <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19, key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric$Year <- as.integer(Electric$Year)
Nieuw$Year <- as.integer(Nieuw$Year)
>>>>>>> 95a585d9d56dc8d309c208603648b485216006a1
str(NieuwMS)
ElectricMS <- nieuw %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric <- nieuw %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
NieuwMS <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19, key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric$Year <- as.integer(Electric$Year)
Nieuw$Year <- as.integer(Nieuw$Year)
NieuwMS$`Market Share` <- as.double(NieuwMS$`Market Share`)
str(NieuwMS)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
=======
<<<<<<< HEAD
library(tidyr)
library(readr)
library(forcats)
library(lubridate)
hev <- read.csv2("Data/HEV_article_2018_filtered.csv")
View(hev)
str(hev)
hev <- hev %>% select(-Car_sharing_)
hev1 <- hev %>% mutate(Gender = as.factor(Gender),
Education_level = as.factor(Education_level),
Employment_status = as.factor(Employment_status),
Income_group = as.factor(Income_group),
Country = as.factor(Country),
buy_electric = as.logical(buy_electric),
Household_members_number = as.factor(Household_members_number),
Plan_to_purchase_vehicle = as.factor(Plan_to_purchase_vehicle))
levels(hev1$Gender) <- c("M", "F")
levels(hev1$Country) <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Netherlands",
"Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain",
"Sweden", "Great Britain", "Malta", "Luxembourg", "Cyprus")
levels(hev1$Education_level) <- c("Primary (elementary school)",
"Lower secondary (upper elementary school)",
"Upper secondary (high school)",
"Tertiary and higher (University degree or PhD)")
levels(hev1$Employment_status) <- c("Full time employed", "Part time employed", "Unemployed",
"Studying", "Retired", "Other", "I prefer not to answer")
levels(hev1$Household_members_number) <- c("one (myself)", "two", "three", "four", "five",
"more than five", "I prefer not to answer")
levels(hev1$Plan_to_purchase_vehicle) <- c("Yes, in the next 6 months",
"Yes, in the next 12 months",
"Yes, in the next 2 years", "No",
"Don’t know/no answer")
levels(hev1$Income_group) <- c("high", "higher middle", "middle", "lower middle", "low",
"I prefer not to answer")
hev1 %>% summary()
hev1 %>% ggplot(aes(Age)) + geom_bar(aes(fill = buy_electric), position = "fill")
hev1 %>% ggplot(aes(Gender)) + geom_bar(aes(fill = buy_electric), position = "dodge")
hev1 %>% ggplot(aes(Income_group)) + geom_bar(aes(fill = buy_electric), position = "dodge")
hev1 %>% filter(Country == "Belgium") %>% group_by(Country, Gender, buy_electric) %>% summarise(n = n(), median(Age)) %>% arrange(desc(n))
levels(hev1$Income_group)
hev1 %>% filter(Country == 'Belgium') %>%
ggplot(aes(Gender)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000))
hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) + labs(y = "Number of respondents", fill = "Buy EV")
p1 <- hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) +
labs(y = "Number of respondents", fill = "Buy EV") + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplotly(p1)
hev1 %>% filter(Country == "Austria") %>% ggplot(aes(Plan_to_purchase_vehicle)) + geom_bar(aes(fill = buy_electric), position = "dodge") + labs(y = "Number of respondents", x = "Plan to buy car", fill = "Buy EV") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1$tesla_sold <- ifelse(hev1$Country %in% teslacountries, 1, 0)
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(aes(color = tesla_sold)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
view(hev1)
str(hev1)
knitr::opts_chunk$set(echo = TRUE)
=======
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
>>>>>>> a5e3763c92e6d1d86f40028056bd7788b6a2926e
library(dplyr)
library(ggplot2)
<<<<<<< HEAD
library(tidyr)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
tweedehands <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Tweedehands")
eu <- read_xlsx("Data/% share of new passenger cars by fuel type in the EU.xlsx")
ElectricMS <- nieuw %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric <- nieuw %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
NieuwMS <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19, key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric$Year <- as.integer(Electric$Year)
Nieuw$Year <- as.integer(Nieuw$Year)
NieuwMS$`Market Share` <- as.double(NieuwMS$`Market Share`)
str(NieuwMS)
runApp('Dashboard_Caro')
shiny::runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
=======
<<<<<<< HEAD
library(tidyr)
library(readr)
library(forcats)
library(lubridate)
hev <- read.csv2("Data/HEV_article_2018_filtered.csv")
View(hev)
str(hev)
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev$tesla_sold <- ifelse(hev$Country %in% teslacountries, 1, 0)
hev <- hev %>% select(-Car_sharing_)
hev1 <- hev %>% mutate(Gender = as.factor(Gender),
Education_level = as.factor(Education_level),
Employment_status = as.factor(Employment_status),
Income_group = as.factor(Income_group),
Country = as.factor(Country),
buy_electric = as.logical(buy_electric),
tesla_sold = as.logical(tesla_sold)
Household_members_number = as.factor(Household_members_number),
knitr::opts_chunk$set(echo = TRUE)
=======
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
>>>>>>> a5e3763c92e6d1d86f40028056bd7788b6a2926e
library(dplyr)
library(ggplot2)
<<<<<<< HEAD
library(tidyr)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
tweedehands <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Tweedehands")
eu <- read_xlsx("Data/% share of new passenger cars by fuel type in the EU.xlsx")
ElectricMS <- nieuw %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric <- nieuw %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
NieuwMS <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19, key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric$Year <- as.integer(Electric$Year)
Nieuw$Year <- as.integer(Nieuw$Year)
NieuwMS$`Market Share` <- as.double(NieuwMS$`Market Share`)
str(NieuwMS)
NieuwMS %>% ggplot(aes(x= Year, y = `Market Share`)) + geom_col(aes(fill = Fuel)) + labs(title = "Market Share of new cars by fuel type in Belgium over the years")
Electric %>% ggplot(aes(x = Year, y = `Cars sold`)) + geom_line(color = "red", size = 1) + labs(title = "Number of new electric cars sold in Belgium over the years")
bar <- nieuw %>% ggplot(aes(x ="", y = MS19*100, fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + ylab("2019") + labs(title = "Market share of new cars by fuel type in Belgium in 2019") + geom_text(aes(label = round(MS19*100))) #labels nog tegoei aanpassen
bar + coord_polar("y", start = 0)
Nieuw %>% ggplot(aes(x = Year, y = `Cars sold`)) + geom_line(aes(color = Fuel), size = 1) + labs(title = "Number of new cars sold in Belgium over the years")
Electric2MS <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2 <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2$Year <- as.integer(Electric2$Year)
Tweedehands$Year <- as.integer(Tweedehands$Year)
TweedehandsMS %>% ggplot(aes(x= Year, y = `Market Share`)) + geom_col(aes(fill = Fuel)) + labs(title = "Market Share of second hand cars by fuel type in Belgium over the years")
bar2 <- tweedehands %>% ggplot(aes(x ="", y = MS19*100, fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + ylab("2019") + labs(title = "Market share of second hand cars by fuel type in Belgium in 2019") + geom_text(aes(label = round(MS19*100))) #labels nog tegoei aanpassen
bar2 + coord_polar("y", start = 0)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share'*100, fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share', fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
TweedehandsMSC
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share', fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
str(TweedehandsMSC)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share', fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
Electric2MS <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2 <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
recode(TweedehandsMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2$Year <- as.integer(Electric2$Year)
Tweedehands$Year <- as.integer(Tweedehands$Year)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
str(TweedehandsMSC)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share', fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == '2019')
str(TweedehandsMSC)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share', fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
Electric2MS <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2 <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
recode(TweedehandsMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2$Year <- as.integer(Electric2$Year)
Tweedehands$Year <- as.integer(Tweedehands$Year)
str(TweedehandsMS)
Electric2MS <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2 <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS$Year <- recode(TweedehandsMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2$Year <- as.integer(Electric2$Year)
Tweedehands$Year <- as.integer(Tweedehands$Year)
str(TweedehandsMS)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
str(TweedehandsMSC)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share', fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
str(TweedehandsMSC)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share'*100, fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
Electric2MS <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("MS")) %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2 <- tweedehands %>% filter(Fuel == "elektrisch") %>% select(starts_with("20")) %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS$Year <- recode(TweedehandsMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Electric2$Year <- as.integer(Electric2$Year)
Tweedehands$Year <- as.integer(Tweedehands$Year)
TweedehandsMS$`Market Share` <- as.double(TweedehandsMS$`Market Share`)
str(TweedehandsMS)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
str(TweedehandsMSC)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share'*100, fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
str(TweedehandsMSC)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share', fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
TweedehandsMSC <- TweedehandsMS %>% filter(Year == 2019)
str(TweedehandsMSC)
bar <- TweedehandsMSC %>% ggplot(aes(x ="", y = 'Market Share'*100, fill = Fuel)) + geom_bar(width = 1, stat = "identity") + xlab("") + labs(title = "Market share of second hand cars by fuel type in Belgium in")
bar + coord_polar("y", start = 0)
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
shiny::runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Data/Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")%>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
Data$Year <- as.factor(Data$Year)
structure(Data)
Data %>% ggplot(aes(x= Month, y = Sales)) + geom_line(aes(color = Year)) + scale_x_continuous(breaks = seq(0,12, by = 1))
Data %>% ggplot(aes(x = Month, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "Periodic Tesla sales over the years.") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_continuous(breaks = seq(0,12, by = 1))
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
View(Data)
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
knitr::opts_chunk$set(echo = TRUE)
>>>>>>> b4014ef5829aad92141a282b13b1bca76c70caea
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Data/Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")%>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
Data$Year <- as.factor(Data$Year)
structure(Data)
Data %>% ggplot(aes(x= Month, y = Sales)) + geom_line(aes(color = Year)) + scale_x_continuous(breaks = seq(0,12, by = 1))
Data %>% ggplot(aes(x = Month, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "Periodic Tesla sales over the years.") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_continuous(breaks = seq(0,12, by = 1))
runApp('Dashboard_Caro')
shiny::runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
shiny::runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
install.packages(ggiraph)
install.packages("ggiraph")
shiny::runApp('Dashboard_Lien')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
shiny::runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
shiny::runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Lien')
runApp('Dashboard_Caro')
runApp()
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
shiny::runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
shiny::runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard_Caro')
shiny::runApp('Dashboard')
runApp('Dashboard')
shiny::runApp('Dashboard')
shiny::runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
eusurvey <- read.csv("data/hev1.csv")
runApp('Dashboard_Jaske')
eusurvey <- read.csv("data/hev1.csv")
eusurvey <- read.csv('data/hev1.csv')
help("read.csv")
getwd()
runApp('Dashboard_Caro')
getwd()
eusurvey <- read.csv('data/hev1.csv')
eusurvey <- read.csv('Dashboard_Jaske/data/hev1.csv')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp()
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
shiny::runApp('Dashboard')
shiny::runApp('Dashboard')
shiny::runApp('Dashboard')
shiny::runApp('Dashboard')
runApp('Dashboard')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(maps)
library(ggplot2)
library(tidyr)
library(plyr)
=======
<<<<<<< HEAD
library(tidyr)
library(readr)
library(forcats)
library(lubridate)
hev <- read.csv2("Data/HEV_article_2018_filtered.csv")
View(hev)
str(hev)
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev$tesla_sold <- ifelse(hev$Country %in% teslacountries, 1, 0)
hev <- hev %>% select(-Car_sharing_)
hev1 <- hev %>% mutate(Gender = as.factor(Gender),
Education_level = as.factor(Education_level),
Employment_status = as.factor(Employment_status),
Income_group = as.factor(Income_group),
Country = as.factor(Country),
buy_electric = as.logical(buy_electric),
tesla_sold = as.logical(tesla_sold),
Household_members_number = as.factor(Household_members_number),
Plan_to_purchase_vehicle = as.factor(Plan_to_purchase_vehicle))
levels(hev1$Gender) <- c("M", "F")
levels(hev1$Country) <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Netherlands",
"Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain",
"Sweden", "Great Britain", "Malta", "Luxembourg", "Cyprus")
levels(hev1$Education_level) <- c("Primary (elementary school)",
"Lower secondary (upper elementary school)",
"Upper secondary (high school)",
"Tertiary and higher (University degree or PhD)")
levels(hev1$Employment_status) <- c("Full time employed", "Part time employed", "Unemployed",
"Studying", "Retired", "Other", "I prefer not to answer")
levels(hev1$Household_members_number) <- c("one (myself)", "two", "three", "four", "five",
"more than five", "I prefer not to answer")
levels(hev1$Plan_to_purchase_vehicle) <- c("Yes, in the next 6 months",
"Yes, in the next 12 months",
"Yes, in the next 2 years", "No",
"Don’t know/no answer")
levels(hev1$Income_group) <- c("high", "higher middle", "middle", "lower middle", "low",
"I prefer not to answer")
hev1 %>% summary()
hev1 %>% ggplot(aes(Age)) + geom_bar(aes(fill = buy_electric), position = "fill")
hev1 %>% ggplot(aes(Gender)) + geom_bar(aes(fill = buy_electric), position = "dodge")
hev1 %>% ggplot(aes(Income_group)) + geom_bar(aes(fill = buy_electric), position = "dodge")
hev1 %>% filter(Country == "Belgium") %>% group_by(Country, Gender, buy_electric) %>% summarise(n = n(), median(Age)) %>% arrange(desc(n))
levels(hev1$Income_group)
hev1 %>% filter(Country == 'Belgium') %>%
ggplot(aes(Gender)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000))
hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) + labs(y = "Number of respondents", fill = "Buy EV")
p1 <- hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) +
labs(y = "Number of respondents", fill = "Buy EV") + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplotly(p1)
hev1 %>% filter(Country == "Austria") %>% ggplot(aes(Plan_to_purchase_vehicle)) + geom_bar(aes(fill = buy_electric), position = "dodge") + labs(y = "Number of respondents", x = "Plan to buy car", fill = "Buy EV") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
=======
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
>>>>>>> 08a125660160972c09a52618cccc5a1acf7c00ec
library(dplyr)
library(tidyr)
library(lubridate)
library(readr)
library(plotly)
library(maps)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
Revenuetabel <- Revenue %>% group_by(Year) %>%
mutate("totalrevenue" = sum(`Automotive Revenues Tesla`, na.rm = TRUE)/1000000)
Free_cashflow <- Free_cashflow %>% group_by(Year) %>%
mutate("totalfreecashflow" = sum(`free cash flow`, na.rm = TRUE)/1000000)
Gross_profit <- Gross_profit %>% group_by(Year) %>%
mutate("totalgrossprofit" = sum(`Automotive gross profit GAAP`, na.rm = TRUE)/1000000)
Gross_Margin <- Gross_Margin %>% group_by(Year) %>%
mutate("totalgrossmargin" = sum(`Gross margin Automotive GAAP`, na.rm = TRUE))
Revenuetabel <- Revenuetabel %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_profit <- Gross_profit %>% unite(Year, Quarter, col = "Date", sep = " ")
Free_cashflow <- Free_cashflow %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_Margin <- Gross_Margin %>% unite(Year, Quarter, col = "Date", sep = " ")
Revenuetabel <- rename(Revenuetabel, c("Revenue" = "Automotive Revenues Tesla"))
Gross_profit <- Gross_profit %>% rename(c("Gross Profit"= "Automotive gross profit GAAP"))
Gross_Margin <- Gross_Margin %>% rename( c("Gross Margin" = "Gross margin Automotive GAAP"))
Revenuetabelnorm <- Revenuetabel %>% select(Date, Revenue)
Gross_profitnorm <- Gross_profit %>% select(Date, `Gross Profit`)
Gross_Marginnorm <- Gross_Margin %>% select(Date, `Gross Margin`)
Free_cashflownorm <- Free_cashflow %>% select(Date, `free cash flow`)
Revenuetabelsom <- Revenuetabel %>% select(Date, totalrevenue)
Gross_profitsom <- Gross_profit %>% select(Date, totalgrossprofit)
Gross_Marginsom <- Gross_Margin %>% select(Date, totalgrossmargin)
Free_cashflowsom <- Free_cashflow %>% select(Date, totalfreecashflow)
Financial_numbersnorm <- left_join(Revenuetabelnorm, Gross_profitnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Gross_Marginnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Free_cashflownorm, by = "Date")
Financial_numbersnorm <- Financial_numbersnorm %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numbersnorm$'Year' <- as.numeric(Financial_numbersnorm$'Year')
Financial_numbersnorm$'Revenue' <- as.numeric(Financial_numbersnorm$'Revenue')
Financial_numbersnorm$'Gross Profit' <- as.numeric(Financial_numbersnorm$'Gross Profit')
Financial_numbersnorm$'Gross Margin' <- as.numeric(Financial_numbersnorm$'Gross Margin')
Financial_numbersnorm$'free cash flow' <- as.numeric(Financial_numbersnorm$'free cash flow')
Financial_numbers_gather_norm <- Financial_numbersnorm %>% gather('Revenue', 'Gross Profit', 'Gross Margin', 'free cash flow', key = 'typenumber', value = 'finvalue')
Financial_numberssom <- left_join(Revenuetabelsom, Gross_profitsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Gross_Marginsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Free_cashflowsom, by = "Date")
Financial_numberssom <- Financial_numberssom %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numberssom$'Year' <- as.numeric(Financial_numberssom$'Year')
Financial_numberssom$'totalrevenue' <- as.numeric(Financial_numberssom$'totalrevenue')
Financial_numberssom$'totalgrossprofit' <- as.numeric(Financial_numberssom$'totalgrossprofit')
Financial_numberssom$'totalgrossmargin' <- as.numeric(Financial_numberssom$'totalgrossmargin')
Financial_numberssom$'totalfreecashflow' <- as.numeric(Financial_numberssom$'totalfreecashflow')
Financial_numbers_gather_som <- Financial_numberssom %>% gather('totalrevenue', 'totalgrossprofit', 'totalgrossmargin', 'totalfreecashflow', key = 'typenumber', value = 'finvalue') %>% distinct()
Financial_numbers_gather_som
Financial_numberssom <- Financial_numberssom %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(readxl)
library(ggplot2)
<<<<<<< HEAD
library(tidyr)
library(shinydashboard)
=======
<<<<<<< HEAD
library(tidyr)
library(readr)
library(forcats)
library(lubridate)
hev <- read.csv2("Data/HEV_article_2018_filtered.csv")
View(hev)
str(hev)
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev$tesla_sold <- ifelse(hev$Country %in% teslacountries, 1, 0)
hev <- hev %>% select(-Car_sharing_)
hev1 <- hev %>% mutate(Gender = as.factor(Gender),
Education_level = as.factor(Education_level),
Employment_status = as.factor(Employment_status),
Income_group = as.factor(Income_group),
Country = as.factor(Country),
buy_electric = as.logical(buy_electric),
tesla_sold = as.logical(tesla_sold),
Household_members_number = as.factor(Household_members_number),
Plan_to_purchase_vehicle = as.factor(Plan_to_purchase_vehicle))
levels(hev1$Gender) <- c("M", "F")
levels(hev1$Country) <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Netherlands",
"Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain",
"Sweden", "Great Britain", "Malta", "Luxembourg", "Cyprus")
levels(hev1$Education_level) <- c("Primary (elementary school)",
"Lower secondary (upper elementary school)",
"Upper secondary (high school)",
"Tertiary and higher (University degree or PhD)")
levels(hev1$Employment_status) <- c("Full time employed", "Part time employed", "Unemployed",
"Studying", "Retired", "Other", "I prefer not to answer")
levels(hev1$Household_members_number) <- c("one (myself)", "two", "three", "four", "five",
"more than five", "I prefer not to answer")
levels(hev1$Plan_to_purchase_vehicle) <- c("Yes, in the next 6 months",
"Yes, in the next 12 months",
"Yes, in the next 2 years", "No",
"Don’t know/no answer")
levels(hev1$Income_group) <- c("high", "higher middle", "middle", "lower middle", "low",
"I prefer not to answer")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(forcats)
library(lubridate)
hev <- read.csv2("Data/HEV_article_2018_filtered.csv")
View(hev)
str(hev)
hev <- hev %>% select(-Car_sharing_)
hev1 <- hev %>% mutate(Gender = as.factor(Gender),
Education_level = as.factor(Education_level),
Employment_status = as.factor(Employment_status),
Income_group = as.factor(Income_group),
Country = as.factor(Country),
buy_electric = as.logical(buy_electric),
Household_members_number = as.factor(Household_members_number),
Plan_to_purchase_vehicle = as.factor(Plan_to_purchase_vehicle))
levels(hev1$Gender) <- c("M", "F")
levels(hev1$Country) <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Netherlands",
"Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain",
"Sweden", "Great Britain", "Malta", "Luxembourg", "Cyprus")
levels(hev1$Education_level) <- c("Primary (elementary school)",
"Lower secondary (upper elementary school)",
"Upper secondary (high school)",
"Tertiary and higher (University degree or PhD)")
levels(hev1$Employment_status) <- c("Full time employed", "Part time employed", "Unemployed",
"Studying", "Retired", "Other", "I prefer not to answer")
levels(hev1$Household_members_number) <- c("one (myself)", "two", "three", "four", "five",
"more than five", "I prefer not to answer")
levels(hev1$Plan_to_purchase_vehicle) <- c("Yes, in the next 6 months",
"Yes, in the next 12 months",
"Yes, in the next 2 years", "No",
"Don’t know/no answer")
levels(hev1$Income_group) <- c("high", "higher middle", "middle", "lower middle", "low",
"I prefer not to answer")
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1$tesla_sold <- ifelse(hev1$Country %in% teslacountries, 1, 0)
hev1 %>% mutate(tesla_sold as.logical(tesla_sold))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(forcats)
library(lubridate)
hev <- read.csv2("Data/HEV_article_2018_filtered.csv")
View(hev)
str(hev)
hev <- hev %>% select(-Car_sharing_)
hev1 <- hev %>% mutate(Gender = as.factor(Gender),
Education_level = as.factor(Education_level),
Employment_status = as.factor(Employment_status),
Income_group = as.factor(Income_group),
Country = as.factor(Country),
buy_electric = as.logical(buy_electric),
Household_members_number = as.factor(Household_members_number),
Plan_to_purchase_vehicle = as.factor(Plan_to_purchase_vehicle))
levels(hev1$Gender) <- c("M", "F")
levels(hev1$Country) <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Netherlands",
"Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain",
"Sweden", "Great Britain", "Malta", "Luxembourg", "Cyprus")
levels(hev1$Education_level) <- c("Primary (elementary school)",
"Lower secondary (upper elementary school)",
"Upper secondary (high school)",
"Tertiary and higher (University degree or PhD)")
levels(hev1$Employment_status) <- c("Full time employed", "Part time employed", "Unemployed",
"Studying", "Retired", "Other", "I prefer not to answer")
levels(hev1$Household_members_number) <- c("one (myself)", "two", "three", "four", "five",
"more than five", "I prefer not to answer")
levels(hev1$Plan_to_purchase_vehicle) <- c("Yes, in the next 6 months",
"Yes, in the next 12 months",
"Yes, in the next 2 years", "No",
"Don’t know/no answer")
levels(hev1$Income_group) <- c("high", "higher middle", "middle", "lower middle", "low",
"I prefer not to answer")
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1$tesla_sold <- ifelse(hev1$Country %in% teslacountries, 1, 0)
hev1 %>% mutate(tesla_sold = as.logical(tesla_sold))
str(hev1)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(tidyr)
library(readr)
library(forcats)
library(lubridate)
hev <- read.csv2("Data/HEV_article_2018_filtered.csv")
View(hev)
str(hev)
hev <- hev %>% select(-Car_sharing_)
hev1 <- hev %>% mutate(Gender = as.factor(Gender),
Education_level = as.factor(Education_level),
Employment_status = as.factor(Employment_status),
Income_group = as.factor(Income_group),
Country = as.factor(Country),
buy_electric = as.logical(buy_electric),
Household_members_number = as.factor(Household_members_number),
Plan_to_purchase_vehicle = as.factor(Plan_to_purchase_vehicle))
levels(hev1$Gender) <- c("M", "F")
levels(hev1$Country) <- c("Austria", "Belgium", "Bulgaria", "Croatia", "Czech Republic",
"Denmark", "Estonia", "Finland", "France", "Germany", "Greece",
"Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Netherlands",
"Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain",
"Sweden", "Great Britain", "Malta", "Luxembourg", "Cyprus")
levels(hev1$Education_level) <- c("Primary (elementary school)",
"Lower secondary (upper elementary school)",
"Upper secondary (high school)",
"Tertiary and higher (University degree or PhD)")
levels(hev1$Employment_status) <- c("Full time employed", "Part time employed", "Unemployed",
"Studying", "Retired", "Other", "I prefer not to answer")
levels(hev1$Household_members_number) <- c("one (myself)", "two", "three", "four", "five",
"more than five", "I prefer not to answer")
levels(hev1$Plan_to_purchase_vehicle) <- c("Yes, in the next 6 months",
"Yes, in the next 12 months",
"Yes, in the next 2 years", "No",
"Don’t know/no answer")
levels(hev1$Income_group) <- c("high", "higher middle", "middle", "lower middle", "low",
"I prefer not to answer")
teslacountries <- c("Austria", "Belgium", "Czech Republic", "Denmark", "Finland", "France", "Germany", "Ireland", "Italy", "Luxembourg", "Netherlands", "Norway", "Slovenia", "Spain", "Sweden", "Switzerland")
hev1$tesla_sold <- ifelse(hev1$Country %in% teslacountries, 1, 0)
hev1 <- hev1 %>% mutate(tesla_sold = as.logical(tesla_sold))
str(hev1)
hev1 %>% summary()
hev1 %>% ggplot(aes(Age)) + geom_bar(aes(fill = buy_electric), position = "fill")
hev1 %>% ggplot(aes(Gender)) + geom_bar(aes(fill = buy_electric), position = "dodge")
hev1 %>% ggplot(aes(Income_group)) + geom_bar(aes(fill = buy_electric), position = "dodge")
hev1 %>% filter(Country == "Belgium") %>% group_by(Country, Gender, buy_electric) %>% summarise(n = n(), median(Age)) %>% arrange(desc(n))
levels(hev1$Income_group)
hev1 %>% filter(Country == 'Belgium') %>%
ggplot(aes(Gender)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000))
hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) + labs(y = "Number of respondents", fill = "Buy EV")
p1 <- hev1 %>% ggplot(aes(Employment_status)) +
geom_bar(aes(fill = buy_electric), position = "dodge") +
scale_y_continuous(limits = c(0, 6000)) +
labs(y = "Number of respondents", fill = "Buy EV") + theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplotly(p1)
hev1 %>% filter(Country == "Austria") %>% ggplot(aes(Plan_to_purchase_vehicle)) + geom_bar(aes(fill = buy_electric), position = "dodge") + labs(y = "Number of respondents", x = "Plan to buy car", fill = "Buy EV") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(aes(color = hevtesla_sold)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(aes(color = tesla_sold)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(aes(fill = tesla_sold)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(fill = tesla_sold) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(color = tesla_sold) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(aes(color = hev1$tesla_sold)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop, color = tesla_sold)) + geom_point() + labs(y = "Percentage of people willing to buy ev", x = "Countries")
str(hev1)
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point() + labs(y = "Percentage of people willing to buy ev", x = "Countries")
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(aes(colour = tesla_sold)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
View(hev1)
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point(aes(fill = tesla_sold)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + geom_point() + labs(y = "Percentage of people willing to buy ev", x = "Countries")
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
theme(axis.text.x = element_text(angle = 60, hjust = 1)) + geom_point(aes(color = tesla_sold))
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")
theme(axis.text.x = element_text(angle = 60, hjust = 1)) + geom_point()
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries")  + geom_point()
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries") + geom_point() +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", legend = "Tesla sold in country") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla sold in country") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color(tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color = tesla_sold) +
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color = tesla_sold) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
?color
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color = tesla_sold), color = "red") +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color(tesla_sold))) +
theme(axis.text.x = element_text(angle = 60, hjust = 1))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) + scale_color_brewer(palette = "PuOr")
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) + scale_color_manual(c("black", "red"))
hev1 %>% group_by(Country, tesla_sold) %>% summarize(n=n(),prop=sum(buy_electric==1)/n()) %>%
ggplot(aes(Country, prop)) + labs(y = "Percentage of people willing to buy ev", x = "Countries", color = "Tesla's sold") + geom_point(aes(color = tesla_sold)) +
theme(axis.text.x = element_text(angle = 60, hjust = 1)) + scale_color_manual(values=c("black", "red"))
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
runApp('Dashboard_Jaske')
=======
>>>>>>> 08a125660160972c09a52618cccc5a1acf7c00ec
library(dplyr)
library(tidyr)
library(lubridate)
library(readr)
library(plotly)
library(maps)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
Revenuetabel <- Revenue %>% group_by(Year) %>%
mutate("totalrevenue" = sum(`Automotive Revenues Tesla`, na.rm = TRUE)/1000000)
Free_cashflow <- Free_cashflow %>% group_by(Year) %>%
mutate("totalfreecashflow" = sum(`free cash flow`, na.rm = TRUE)/1000000)
Gross_profit <- Gross_profit %>% group_by(Year) %>%
mutate("totalgrossprofit" = sum(`Automotive gross profit GAAP`, na.rm = TRUE)/1000000)
Gross_Margin <- Gross_Margin %>% group_by(Year) %>%
mutate("totalgrossmargin" = sum(`Gross margin Automotive GAAP`, na.rm = TRUE))
Revenuetabel <- Revenuetabel %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_profit <- Gross_profit %>% unite(Year, Quarter, col = "Date", sep = " ")
Free_cashflow <- Free_cashflow %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_Margin <- Gross_Margin %>% unite(Year, Quarter, col = "Date", sep = " ")
Revenuetabel <- rename(Revenuetabel, c("Revenue" = "Automotive Revenues Tesla"))
Gross_profit <- Gross_profit %>% rename(c("Gross Profit"= "Automotive gross profit GAAP"))
Gross_Margin <- Gross_Margin %>% rename( c("Gross Margin" = "Gross margin Automotive GAAP"))
Revenuetabelnorm <- Revenuetabel %>% select(Date, Revenue)
Gross_profitnorm <- Gross_profit %>% select(Date, `Gross Profit`)
Gross_Marginnorm <- Gross_Margin %>% select(Date, `Gross Margin`)
Free_cashflownorm <- Free_cashflow %>% select(Date, `free cash flow`)
Revenuetabelsom <- Revenuetabel %>% select(Date, totalrevenue)
Gross_profitsom <- Gross_profit %>% select(Date, totalgrossprofit)
Gross_Marginsom <- Gross_Margin %>% select(Date, totalgrossmargin)
Free_cashflowsom <- Free_cashflow %>% select(Date, totalfreecashflow)
Financial_numbersnorm <- left_join(Revenuetabelnorm, Gross_profitnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Gross_Marginnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Free_cashflownorm, by = "Date")
Financial_numbersnorm <- Financial_numbersnorm %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numbersnorm$'Year' <- as.numeric(Financial_numbersnorm$'Year')
Financial_numbersnorm$'Revenue' <- as.numeric(Financial_numbersnorm$'Revenue')
Financial_numbersnorm$'Gross Profit' <- as.numeric(Financial_numbersnorm$'Gross Profit')
Financial_numbersnorm$'Gross Margin' <- as.numeric(Financial_numbersnorm$'Gross Margin')
Financial_numbersnorm$'free cash flow' <- as.numeric(Financial_numbersnorm$'free cash flow')
Financial_numbers_gather_norm <- Financial_numbersnorm %>% gather('Revenue', 'Gross Profit', 'Gross Margin', 'free cash flow', key = 'typenumber', value = 'finvalue')
Financial_numberssom <- left_join(Revenuetabelsom, Gross_profitsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Gross_Marginsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Free_cashflowsom, by = "Date")
Financial_numberssom <- Financial_numberssom %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numberssom$'Year' <- as.numeric(Financial_numberssom$'Year')
Financial_numberssom$'totalrevenue' <- as.numeric(Financial_numberssom$'totalrevenue')
Financial_numberssom$'totalgrossprofit' <- as.numeric(Financial_numberssom$'totalgrossprofit')
Financial_numberssom$'totalgrossmargin' <- as.numeric(Financial_numberssom$'totalgrossmargin')
Financial_numberssom$'totalfreecashflow' <- as.numeric(Financial_numberssom$'totalfreecashflow')
Financial_numbers_gather_som <- Financial_numberssom %>% gather('totalrevenue', 'totalgrossprofit', 'totalgrossmargin', 'totalfreecashflow', key = 'typenumber', value = 'finvalue') %>% select(Year, typenumber, finvalue) %>% distinct()
Financial_numbers_gather_som
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(readxl)
library(ggplot2)
library(tidyr)
library(shinydashboard)
library(dplyr)
library(tidyr)
library(lubridate)
library(readr)
library(plotly)
library(maps)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
Revenuetabel <- Revenue %>% group_by(Year) %>%
mutate("totalrevenue" = sum(`Automotive Revenues Tesla`, na.rm = TRUE)/1000000)
Free_cashflow <- Free_cashflow %>% group_by(Year) %>%
mutate("totalfreecashflow" = sum(`free cash flow`, na.rm = TRUE)/1000000)
Gross_profit <- Gross_profit %>% group_by(Year) %>%
mutate("totalgrossprofit" = sum(`Automotive gross profit GAAP`, na.rm = TRUE)/1000000)
Gross_Margin <- Gross_Margin %>% group_by(Year) %>%
mutate("totalgrossmargin" = sum(`Gross margin Automotive GAAP`, na.rm = TRUE))
Revenuetabel <- Revenuetabel %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_profit <- Gross_profit %>% unite(Year, Quarter, col = "Date", sep = " ")
Free_cashflow <- Free_cashflow %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_Margin <- Gross_Margin %>% unite(Year, Quarter, col = "Date", sep = " ")
Revenuetabel <- rename(Revenuetabel, c("Revenue" = "Automotive Revenues Tesla"))
Gross_profit <- Gross_profit %>% rename(c("Gross Profit"= "Automotive gross profit GAAP"))
Gross_Margin <- Gross_Margin %>% rename( c("Gross Margin" = "Gross margin Automotive GAAP"))
Revenuetabelnorm <- Revenuetabel %>% select(Date, Revenue)
Gross_profitnorm <- Gross_profit %>% select(Date, `Gross Profit`)
Gross_Marginnorm <- Gross_Margin %>% select(Date, `Gross Margin`)
Free_cashflownorm <- Free_cashflow %>% select(Date, `free cash flow`)
Revenuetabelsom <- Revenuetabel %>% select(Date, totalrevenue)
Gross_profitsom <- Gross_profit %>% select(Date, totalgrossprofit)
Gross_Marginsom <- Gross_Margin %>% select(Date, totalgrossmargin)
Free_cashflowsom <- Free_cashflow %>% select(Date, totalfreecashflow)
Financial_numbersnorm <- left_join(Revenuetabelnorm, Gross_profitnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Gross_Marginnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Free_cashflownorm, by = "Date")
Financial_numbersnorm <- Financial_numbersnorm %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numbersnorm$'Year' <- as.numeric(Financial_numbersnorm$'Year')
Financial_numbersnorm$'Revenue' <- as.numeric(Financial_numbersnorm$'Revenue')
Financial_numbersnorm$'Gross Profit' <- as.numeric(Financial_numbersnorm$'Gross Profit')
Financial_numbersnorm$'Gross Margin' <- as.numeric(Financial_numbersnorm$'Gross Margin')
Financial_numbersnorm$'free cash flow' <- as.numeric(Financial_numbersnorm$'free cash flow')
Financial_numbers_gather_norm <- Financial_numbersnorm %>% gather('Revenue', 'Gross Profit', 'Gross Margin', 'free cash flow', key = 'typenumber', value = 'finvalue')
Financial_numberssom <- left_join(Revenuetabelsom, Gross_profitsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Gross_Marginsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Free_cashflowsom, by = "Date")
Financial_numberssom <- Financial_numberssom %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numberssom$'Year' <- as.numeric(Financial_numberssom$'Year')
Financial_numberssom$'totalrevenue' <- as.numeric(Financial_numberssom$'totalrevenue')
Financial_numberssom$'totalgrossprofit' <- as.numeric(Financial_numberssom$'totalgrossprofit')
Financial_numberssom$'totalgrossmargin' <- as.numeric(Financial_numberssom$'totalgrossmargin')
Financial_numberssom$'totalfreecashflow' <- as.numeric(Financial_numberssom$'totalfreecashflow')
Financial_numbers_gather_som <- Financial_numberssom %>% gather('totalrevenue', 'totalgrossprofit', 'totalgrossmargin', 'totalfreecashflow', key = 'typenumber', value = 'finvalue') %>% select(Year, typenumber, finvalue) %>% distinct()
Financial_numbers_gather %>% filter(Year >= 2015 & Year <= 2020) %>% group_by(Year) %>%
mutate("totalrev" = sum(Financial_numbers_gather$finvalue[Financial_numbers_gather$typenumber == "Revenue"], na.rm = TRUE)/1000000) %>% select(Year, typenumber, totalrev)%>% distinct()
Financial_numbers_gather_som %>% filter(Year == 2020, typenumber == 'totalrevenue') %>% group_by(Year) %>% summarise(totaal = sum(finvalue))
Financial_numbers_gather_som %>% filter(Year == 2020, typenumber == 'totalrevenue') %>% group_by(Year) %>% summarise(totaal = sum(finvalue)) %>% select(totaal)
Financial_numbers_gather_som %>% filter(Year == 2020, typenumber == 'totalrevenue') %>% group_by(Year)
Financial_numbers_gather_som %>% filter(Year == 2020, typenumber == 'totalrevenue') %>% group_by(Year) select(finvalue[])
Financial_numbers_gather_som %>% filter(Year == 2020, typenumber == 'totalrevenue') %>% group_by(Year) %>% select(finvalue[])
knitr::opts_chunk$set(echo = TRUE)
library(shiny)
library(readxl)
library(ggplot2)
library(tidyr)
library(shinydashboard)
>>>>>>> a5e3763c92e6d1d86f40028056bd7788b6a2926e
library(dplyr)
library(tidyr)
library(lubridate)
<<<<<<< HEAD
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
tweedehands <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Tweedehands")
NieuwMS <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
NieuwMS$Year <- recode(NieuwMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- as.integer(Nieuw$Year)
NieuwMS$Year <- as.integer(NieuwMS$Year)
NieuwMS$Market.Share <- as.double(NieuwMS$Market.Share)
TweedehandsMS <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS$Year <- recode(TweedehandsMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Tweedehands$Year <- as.integer(Tweedehands$Year)
TweedehandsMS$Year <- as.integer(TweedehandsMS$Year)
TweedehandsMS$Market.Share <- as.double(TweedehandsMS$Market.Share)
Nieuw %>% filter(Year == 2019, 'Cars sold' < 0.01)
Nieuw
l <- Nieuw %>% filter(Year == 2019, 'Cars sold' < 0.01)
l
View(Nieuw)
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(NieuwMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- as.integer(Nieuw$Year)
Nieuw$Market.Share <- as.double(NieuwMS$Market.Share)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(NieuwMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- as.integer(Nieuw$Year)
Nieuw$Market.Share <- as.double(NieuwMS$Market.Share)
View(Nieuw)
runApp('Dashboard_Caro')
=======
library(readr)
library(plotly)
<<<<<<< HEAD
library(maps)
Revenue <- read_xlsx("data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Revenues (automotive)", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_Margin <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross margin", col_types = c("numeric", "text", "numeric", "numeric"))
Gross_profit <- read_xlsx("Data/Revenue-gross margin-gross profit worldwide 2015-2020.xlsx", sheet = "Gross profit", col_types = c("numeric", "text", "numeric", "numeric", "numeric"))
Free_cashflow <- read_xlsx("Data/Tesla's free cash flow by quarter 2020 world wide.xlsx", skip = 3 , sheet = "Data", col_types = c("numeric", "text", "numeric"))
Revenuetabel <- Revenue %>% group_by(Year) %>%
mutate("totalrevenue" = sum(`Automotive Revenues Tesla`, na.rm = TRUE)/1000000)
Free_cashflow <- Free_cashflow %>% group_by(Year) %>%
mutate("totalfreecashflow" = sum(`free cash flow`, na.rm = TRUE)/1000000)
Gross_profit <- Gross_profit %>% group_by(Year) %>%
mutate("totalgrossprofit" = sum(`Automotive gross profit GAAP`, na.rm = TRUE)/1000000)
Gross_Margin <- Gross_Margin %>% group_by(Year) %>%
mutate("totalgrossmargin" = sum(`Gross margin Automotive GAAP`, na.rm = TRUE))
Revenuetabel <- Revenuetabel %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_profit <- Gross_profit %>% unite(Year, Quarter, col = "Date", sep = " ")
Free_cashflow <- Free_cashflow %>% unite(Year, Quarter, col = "Date", sep = " ")
Gross_Margin <- Gross_Margin %>% unite(Year, Quarter, col = "Date", sep = " ")
Revenuetabel <- rename(Revenuetabel, c("Revenue" = "Automotive Revenues Tesla"))
Gross_profit <- Gross_profit %>% rename(c("Gross Profit"= "Automotive gross profit GAAP"))
Gross_Margin <- Gross_Margin %>% rename( c("Gross Margin" = "Gross margin Automotive GAAP"))
Revenuetabelnorm <- Revenuetabel %>% select(Date, Revenue)
Gross_profitnorm <- Gross_profit %>% select(Date, `Gross Profit`)
Gross_Marginnorm <- Gross_Margin %>% select(Date, `Gross Margin`)
Free_cashflownorm <- Free_cashflow %>% select(Date, `free cash flow`)
Revenuetabelsom <- Revenuetabel %>% select(Date, totalrevenue)
Gross_profitsom <- Gross_profit %>% select(Date, totalgrossprofit)
Gross_Marginsom <- Gross_Margin %>% select(Date, totalgrossmargin)
Free_cashflowsom <- Free_cashflow %>% select(Date, totalfreecashflow)
Financial_numbersnorm <- left_join(Revenuetabelnorm, Gross_profitnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Gross_Marginnorm, by = "Date")
Financial_numbersnorm <- left_join(Financial_numbersnorm, Free_cashflownorm, by = "Date")
Financial_numbersnorm <- Financial_numbersnorm %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numbersnorm$'Year' <- as.numeric(Financial_numbersnorm$'Year')
Financial_numbersnorm$'Revenue' <- as.numeric(Financial_numbersnorm$'Revenue')
Financial_numbersnorm$'Gross Profit' <- as.numeric(Financial_numbersnorm$'Gross Profit')
Financial_numbersnorm$'Gross Margin' <- as.numeric(Financial_numbersnorm$'Gross Margin')
Financial_numbersnorm$'free cash flow' <- as.numeric(Financial_numbersnorm$'free cash flow')
Financial_numbers_gather_norm <- Financial_numbersnorm %>% gather('Revenue', 'Gross Profit', 'Gross Margin', 'free cash flow', key = 'typenumber', value = 'finvalue')
Financial_numberssom <- left_join(Revenuetabelsom, Gross_profitsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Gross_Marginsom, by = "Date")
Financial_numberssom <- left_join(Financial_numberssom, Free_cashflowsom, by = "Date")
Financial_numberssom <- Financial_numberssom %>% separate(Date, sep = " ", into = c("Year", "Quarter"))
Financial_numberssom$'Year' <- as.numeric(Financial_numberssom$'Year')
Financial_numberssom$'totalrevenue' <- as.numeric(Financial_numberssom$'totalrevenue')
Financial_numberssom$'totalgrossprofit' <- as.numeric(Financial_numberssom$'totalgrossprofit')
Financial_numberssom$'totalgrossmargin' <- as.numeric(Financial_numberssom$'totalgrossmargin')
Financial_numberssom$'totalfreecashflow' <- as.numeric(Financial_numberssom$'totalfreecashflow')
Financial_numbers_gather_som <- Financial_numberssom %>% gather('totalrevenue', 'totalgrossprofit', 'totalgrossmargin', 'totalfreecashflow', key = 'typenumber', value = 'finvalue') %>% select(Year, typenumber, finvalue) %>% distinct()
Financial_numbers_gather %>% filter(Year >= 2015 & Year <= 2020) %>% group_by(Year) %>%
mutate("totalrev" = sum(Financial_numbers_gather$finvalue[Financial_numbers_gather$typenumber == "Revenue"], na.rm = TRUE)/1000000) %>% select(Year, typenumber, totalrev)%>% distinct()
Financial_numbers_gather_som %>% filter(Year == 2020, typenumber == 'totalrevenue') %>% group_by(Year) %>% select(finvalue[])
Financial_numbers_gather_som %>% filter(Year == 2020, typenumber == 'totalrevenue') %>% group_by(Year) %>% select(finvalue)
somjaar <- Financial_numbers_gather_som %>% filter(Year == 2020, typenumber == 'totalrevenue') %>% group_by(Year) %>% select(finvalue)
somjaar$finvalue[]
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
=======
library(DT)
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
sessionInfo()
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
runApp('Dashboard')
>>>>>>> a5e3763c92e6d1d86f40028056bd7788b6a2926e
runApp('Dashboard')
knitr::opts_chunk$set(echo = TRUE)
```{r}
library(readxl)
library(maps)
library(ggplot2)
library(tidyr)
library(plyr)
library(dplyr)
library(lubridate)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(NieuwMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(Nieuw$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
View(Nieuw)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
View(nieuw)
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
View(Nieuw)
Nieuw$Year <- recode(Nieuw$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
library(readxl)
library(maps)
library(ggplot2)
library(tidyr)
library(plyr)
library(dplyr)
library(lubridate)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
tweedehands <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Tweedehands")
NieuwMS <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
NieuwMS$Year <- recode(NieuwMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- as.integer(Nieuw$Year)
NieuwMS$Year <- as.integer(NieuwMS$Year)
NieuwMS$Market.Share <- as.double(NieuwMS$Market.Share)
TweedehandsMS <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "Year", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
TweedehandsMS$Year <- recode(TweedehandsMS$Year, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Tweedehands$Year <- as.integer(Tweedehands$Year)
TweedehandsMS$Year <- as.integer(TweedehandsMS$Year)
TweedehandsMS$Market.Share <- as.double(TweedehandsMS$Market.Share)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "MSYear", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(Nieuw$MSYear, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
#Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
Nieuw$Year <- as.integer(Nieuw$Year)
Nieuw$Market.Share <- as.double(NieuwMS$Market.Share)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "MSYear", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(Nieuw$MSYear, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "MSYear", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(Nieuw$MSYear, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
#Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
Nieuw$Year <- as.integer(Nieuw$Year)
Nieuw$Market.Share <- as.double(NieuwMS$Market.Share)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "MSYear", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(Nieuw$MSYear, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "MSYear", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(Nieuw$MSYear, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- as.integer(Nieuw$Year)
Nieuw$Market.Share <- as.double(NieuwMS$Market.Share)
Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "MSYear", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(Nieuw$MSYear, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- as.integer(Nieuw$Year)
Nieuw$Market.Share <- as.double(NieuwMS$Market.Share)
Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
nieuw <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Nieuw")
Nieuw <- nieuw %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "MSYear", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- recode(Nieuw$MSYear, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Nieuw <- nieuw %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Nieuw$Year <- as.integer(Nieuw$Year)
Nieuw$Market.Share <- as.double(NieuwMS$Market.Share)
Nieuw <- Nieuw %>% select(Fuel, Year, `Cars sold`, Market.Share)
tweedehands <- read_xlsx("Data/Verkoop per brandstof (België) met market share.xlsx", sheet = "Tweedehands")
Tweedehands <- tweedehands %>% gather(MS12, MS13, MS14, MS15, MS16, MS17, MS18, MS19,key = "MSYear", value = "Market.Share",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Tweedehands$Year <- recode(Tweedehands$MSYear, MS12 = "2012", MS13 = "2013", MS14 = "2014", MS15 = "2015", MS16 = "2016", MS17 = "2017", MS18 = "2018", MS19 = "2019" )
Tweedehands <- tweedehands %>% gather('2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019', key = "Year", value = "Cars sold",na.rm = FALSE, convert = FALSE, factor_key = FALSE)
Tweedehands$Year <- as.integer(Tweedehands$Year)
Tweedehands$Market.Share <- as.double(TweedehandsMS$Market.Share)
Tweedehands <- Tweedehands %>% select(Fuel, Year, `Cars sold`, Market.Share)
View(Tweedehands)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l
shiny::runApp('Dashboard')
runApp('Dashboard')
<<<<<<< HEAD
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- l %>% rowsum(dims = 1,10)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- l %>% rowsum(dims = 10)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowsum(l, dims = 10)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 10)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 9)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 1,10)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 1,9)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 2,9)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 3)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 1)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 2)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- rowSums(l, dims = 1,10)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- l %>% select('Cars sold', Market.Share) %>% rowSums(dims = 1,10)
l
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- l %>% select('Cars sold', Market.Share) %>% colSums(dims = 1,2)
l
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- l %>% colSums(l, dims = 1,4)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- l %>% colSums(dims = 1,4)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- l %>% colSums(dims = 3,4)
l <- Nieuw %>% filter(Year == 2019, Market.Share < 0.01)
l <- l %>% select('Cars sold', Market.Share) %>% colSums(dims = 1,2)
l
=======
>>>>>>> d65ccaee402a9f9fbc60089d4dadf805ce12194b
>>>>>>> fd680d8a799fa2a44bce89346f72d8174e72e26e
>>>>>>> a5e3763c92e6d1d86f40028056bd7788b6a2926e
