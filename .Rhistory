<<<<<<< HEAD
countriesafpassengercars <- read_xlsx("Countries overview of af passenger cars.xlsx", skip = 2 , col_types = c("text", "text", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric", "numeric"))
summary(countriesafpassengercars)
countriesafinfrastructure <- countriesafinfrastructure %>% gather('BEV', 'H2', 'CNG', 'LNG', 'PHEV', 'LPG', 'Total', key = 'brandstof', value = 'waardes')
countriesafpassengercars <- countriesafpassengercars %>% gather('BEV', 'H2', 'CNG', 'LNG', 'PHEV', 'LPG', 'Total', key = 'brandstof', value = 'waardes')
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2008') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2008', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,1000000, by= 100000)) + theme(axis.text.x = element_text(angle = 45))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2008') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2008', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 45))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2008') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2008', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2009') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2009', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2010') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2010', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2011') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2011', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2012') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2012', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2013') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2013', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2014') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2014', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2015') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2015', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2016') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2016', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2017') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2017', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2018') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2018', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2019') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2019', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Year == '2020') %>% ggplot(aes(x = Country, y = waardes, fill = brandstof))+ geom_col(position = "stack") + labs(title = 'Countries overview of AF passenger cars 2020', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,10000000, by= 1000000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Country == 'BE') %>% ggplot(aes(x = Year, y = waardes, fill = brandstof))+ geom_col(position = "dodge")  + labs(title = 'Countries overview of AF passenger cars BE', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,100000, by= 1000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Country == 'BE') %>% ggplot(aes(x = Year, y = waardes, fill = brandstof))+ geom_col(position = "dodge")  + labs(title = 'Countries overview of AF passenger cars BE', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,100000, by= 10000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Country == 'BE', brandstof == c('BEV', 'PHEV')) %>% ggplot(aes(x = Year, y = waardes, fill = brandstof))+ geom_col(position = "dodge")  + labs(title = 'Countries overview of AF passenger cars BE', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,100000, by= 10000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Country == 'BE', brandstof == 'BEV') %>% ggplot(aes(x = Year, y = waardes, fill = brandstof))+ geom_col(position = "dodge")  + labs(title = 'Countries overview of AF passenger cars BE', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,100000, by= 10000)) + theme(axis.text.x = element_text(angle = 90))
countriesafpassengercars %>% filter(brandstof != 'Total', Country == 'BE', brandstof == 'PHEV') %>% ggplot(aes(x = Year, y = waardes, fill = brandstof))+ geom_col(position = "dodge")  + labs(title = 'Countries overview of AF passenger cars BE', subtitle = 'Total fleet of passenger cars per alternative fuel', y = '')  + scale_y_continuous(breaks = seq(0,100000, by= 10000)) + theme(axis.text.x = element_text(angle = 90))
brandstofev <- countriesafinfrastructure %>% select(brandstof == 'BEV', brandstof == 'PHEV')
brandstofev <- countriesafpassengercars %>% select(brandstof == 'BEV', brandstof == 'PHEV')
brandstofev <- countriesafpassengercars %>% pull(brandstof == 'BEV', brandstof == 'PHEV')
brandstofev <- countriesafpassengercars %>% pull(var = 'BEV', var = 'PHEV')
brandstofev <- countriesafpassengercars %>% pull(var = c('BEV','PHEV'))
?add_column
countriesafpassengercarsev <- countriesafpassengercars %>% mutate(EV = (BEV + PHEV))
countriesafpassengercarsev <- countriesafpassengercars %>% mutate(EV = BEV + PHEV)
countriesafpassengercarsev <- countriesafpassengercars %>% mutate('EV' = BEV + PHEV)
countriesafpassengercarsev <- countriesafpassengercars %>% mutate('EV' = 'BEV' + 'PHEV')
countriesafpassengercarsev <- countriesafpassengercars %>% mutate('EV' == 'BEV' + 'PHEV')
countriesafpassengercarsev <- countriesafpassengercars %>% mutate('EV' = 'BEV' + 'PHEV')
countriesafpassengercarsev <- countriesafpassengercars %>% mutate('EV' = BEV + PHEV)
library(readr)
library(dplyr)
=======
>>>>>>> d93e79971c7bbc6fc5d8aa95a5e499a92e759ba7
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
Data$Year <- as.integer(Data$Year)
structure(Data)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
VPS <- read_xlsx("New cars sold in the EU by segment in million units.xlsx")
VPS <- VPS %>% gather('2008':'2019', key=  "Year", value="Sales")
summary(VPS)
VPS$Year <- as.numeric(VPS$Year)
VPS$Sales <- as.double(VPS$Sales)
VPS %>% ggplot(aes(x=Year, y=Sales)) + geom_line(aes(color = Segment)) + labs(title = "New cars sold in the EU by segment in million units over the years.") + scale_x_continuous(breaks = c(2008:2019)) + scale_y_continuous(breaks= seq(0,6, by = 1))
#x-as moet gaan van 2008-2019
VPS %>% ggplot(aes(x = Segment, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "New cars sold in the EU by segment in million units for each year.") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
Data$Year <- as.integer(Data$Year)
structure(Data)
Data %>% ggplot(aes(x= Month, y = Sales)) + geom_line(aes(color = Year))
Data %>% ggplot(aes(x = Month, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "Periodic Tesla sales over the years.") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
Data %>% ggplot(aes(x= Month, y = Sales)) + geom_line(aes(color = Year)) + scale_x_continuous(breaks = seq(0,12, by = 1))
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
structure(Data)
Data %>% ggplot(aes(x= Month, y = Sales)) + geom_line(aes(color = Year)) + scale_x_continuous(breaks = seq(0,12, by = 1))
Data %>% ggplot(aes(x = Month, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "Periodic Tesla sales over the years.") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
Data %>% ggplot(aes(x= Month, y = Sales)) + geom_line(aes(color = Year)) + scale_x_continuous(breaks = seq(0,12, by = 1))
Data %>% ggplot(aes(x = Month, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "Periodic Tesla sales over the years.") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
View(Data)
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
#Data$Month <- as.integer(Data$Month)
structure(Data)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
structure(Data)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
#Data$Month <- as.integer(Data$Month)
structure(Data)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
#Data$Month <- as.integer(Data$Month)
structure(data)
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
#Data$Month <- as.integer(Data$Month)
Data <- data %>% gather(January:December, key=  "Month", value="Sales")
structure(Data)
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")
Data$Month <- as.integer(Data$Month)
structure(Data)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")%>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
structure(Data)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")%>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"))
Data$Month <- as.integer(Data$Month)
structure(Data)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")%>% mutate(Month = c(str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12")))
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")%>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
structure(Data)
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")%>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
structure(Data)
Data %>% ggplot(aes(x= Month, y = Sales)) + geom_line(aes(color = Year)) + scale_x_continuous(breaks = seq(0,12, by = 1))
Data %>% ggplot(aes(x = Month, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "Periodic Tesla sales over the years.") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(readxl)
library(tidyr)
library(dplyr)
library(ggplot2)
library(stringr)
data <- read_xlsx("Monthly Tesla Vehicle Sales.xlsx")
data$January <- as.integer(data$January)
data$February <- as.integer(data$February)
data$March <- as.integer(data$March)
data$April <- as.integer(data$April)
data$May <- as.integer(data$May)
data$June <- as.integer(data$June)
data$July <- as.integer(data$July)
data$August <- as.integer(data$August)
data$September <- as.integer(data$September)
data$October <- as.integer(data$October)
data$November <- as.integer(data$November)
data$December <- as.integer(data$December)
#Data <- data %>% gather(January:December, key=  "Month", value="Sales") %>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data <- data %>% gather(January:December, key=  "Month", value="Sales")%>% mutate(Month = str_replace(Month, "January", "1"), Month = str_replace(Month, "February", "2"), Month = str_replace(Month, "March", "3"), Month = str_replace(Month, "April", "4"), Month = str_replace(Month, "May", "5"), Month = str_replace(Month, "June", "6"), Month = str_replace(Month, "July", "7"), Month = str_replace(Month, "August", "8"), Month = str_replace(Month, "September", "9"), Month = str_replace(Month, "October", "10"), Month = str_replace(Month, "November", "11"), Month = str_replace(Month, "December", "12"))
Data$Month <- as.integer(Data$Month)
Data$Year <- as.factor(Data$Year)
structure(Data)
Data %>% ggplot(aes(x= Month, y = Sales)) + geom_line(aes(color = Year)) + scale_x_continuous(breaks = seq(0,12, by = 1))
Data %>% ggplot(aes(x = Month, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "Periodic Tesla sales over the years.") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
Data %>% ggplot(aes(x = Month, y = Sales)) + geom_col() + facet_wrap(Year~.) + labs(title = "Periodic Tesla sales over the years.") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + scale_x_continuous(breaks = seq(0,12, by = 1))
shiny::runApp('Dashboard_Lien')
library(readxl)
library(ggplot2)
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
install.packages('leaflet')
library(leaflet)
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(maps)
library(ggplot2)
library(tidyr)
library(dplyr)
library(lubridate)
library(ggmap)
library(mapdata)
library(mapproj)
library(sf)
library(rnaturalearth)
library(hrbrthemes)
library(grid)
library(rworldmap)
library(shiny)
library(plotly)
superchargers <- read_xlsx("Data/Superchargers.xlsx")
summary(superchargers)
superchargers <- superchargers %>% separate(GPS, sep = ",", into = c("Latitude", "Longitude"))
superchargers$Longitude <- as.integer(superchargers$Longitude)
superchargers$Latitude <- as.integer(superchargers$Latitude)
superchargers <- data.frame(superchargers)
View(superchargers)
library(readxl)
library(maps)
library(ggplot2)
library(tidyr)
library(dplyr)
library(lubridate)
library(ggmap)
library(mapdata)
library(mapproj)
library(sf)
library(rnaturalearth)
library(hrbrthemes)
library(grid)
library(rworldmap)
library(shiny)
library(plotly)
superchargers <- read_xlsx("Data/Superchargers.xlsx")
summary(superchargers)
superchargers <- superchargers %>% separate(GPS, sep = ",", into = c("Latitude", "Longitude"))
superchargers$Longitude <- as.double(superchargers$Longitude)
superchargers$Latitude <- as.double(superchargers$Latitude)
superchargers <- data.frame(superchargers)
runApp('Dashboard_Caro')
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
teslapalen <- read_xlsx("Superchargers.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
teslapalen <- read_xlsx("Data/Superchargers.xlsx")
ionity <- read_xlsx("ionity_locations.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
teslapalen <- read_xlsx("Data/Superchargers.xlsx")
ionity <- read_xlsx("Data/ionity_locations.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
teslapalen <- read_xlsx("Data/Superchargers.xlsx")
ionity <- read_xlsx("Data/ionity_locations.xlsx")
str(ionity)
ionity$Supercharger <- ionity$name
ionity$Stalls <- ionity$charger_count
ionity$'Open Date' <- ionity$golive
ionity$Latitude <- ionity$coords.lat
ionity$Longitude <- ionity$coords.lng
ionity$Status <- ionity$description
ionity$Description <- ionity$title
ionity$Country <- ionity$geo_state.country
ionity$City <- ionity$city
ionity$State <- ionity$geo_state.name_en
ionity <- ionity %>% filter(Status != 'now building' | Status != 'Now building')
ionity <- ionity %>% select(Supercharger, Stalls, `Open Date`, Latitude, Longitude, Description, City, State, Country)
teslapalen <- teslapalen %>% separate(GPS, sep = ",", into = c("Latitude", "Longitude"))
teslapalen$Longitude <- as.double(teslapalen$Longitude)
teslapalen$Latitude <- as.double(teslapalen$Latitude)
teslapalen <- teslapalen %>% mutate(Description = 'Tesla') %>% filter(Status == 'OPEN') %>% select(Supercharger, Stalls, `Open Date`, Latitude, Longitude, Description, City, State, Country)
ionity$`Open Date` <- as.POSIXct(ionity$`Open Date`, format = "%Y-%m-%d %H:%M")
laadpalen <- bind_rows(ionity, teslapalen)
laadpalen$Country <- as.factor(laadpalen$Country)
taart <- count(laadpalen, "Description")
laadpalen <- count(laadpalen, c("Description", "Country"))
laadpalen %>% ggplot(aes(x = Description, y = freq)) + geom_col() + labs(title = "Superchargers per country") + facet_wrap(Country~.)+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
laadpalen %>% ggplot(aes(x = Country, y = freq)) + geom_col(aes(fill = Description)) + labs(title = "Superchargers per country") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
taart <- taart %>% mutate(ratio = round(freq/sum(freq)*100))
taart %>% ggplot(aes(x="", y = ratio, fill = Description)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + labs(title = "Superchargers market share")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
teslapalen <- read_xlsx("Data/Superchargers.xlsx")
ionity <- read_xlsx("Data/ionity_locations.xlsx")
str(ionity)
ionity$Supercharger <- ionity$name
ionity$Stalls <- ionity$charger_count
ionity$'Open Date' <- ionity$golive
ionity$Latitude <- ionity$coords.lat
ionity$Longitude <- ionity$coords.lng
ionity$Status <- ionity$description
ionity$Description <- ionity$title
ionity$Country <- ionity$geo_state.country
ionity$City <- ionity$city
ionity$State <- ionity$geo_state.name_en
ionity <- ionity %>% filter(Status != 'now building' | Status != 'Now building')
ionity <- ionity %>% select(Supercharger, Stalls, `Open Date`, Latitude, Longitude, Description, City, State, Country)
teslapalen <- teslapalen %>% separate(GPS, sep = ",", into = c("Latitude", "Longitude"))
teslapalen$Longitude <- as.double(teslapalen$Longitude)
teslapalen$Latitude <- as.double(teslapalen$Latitude)
teslapalen <- teslapalen %>% mutate(Description = 'Tesla') %>% filter(Status == 'OPEN') %>% select(Supercharger, Stalls, `Open Date`, Latitude, Longitude, Description, City, State, Country)
ionity$`Open Date` <- as.POSIXct(ionity$`Open Date`, format = "%Y-%m-%d %H:%M")
laadpalen <- bind_rows(ionity, teslapalen)
laadpalen$Country <- as.factor(laadpalen$Country)
taart <- count(laadpalen, "Description")
laadpalen <- count(laadpalen, c("Description", "Country"))
laadpalen %>% ggplot(aes(x = Description, y = freq)) + geom_col() + labs(title = "Superchargers per country") + facet_wrap(Country~.)+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
laadpalen %>% ggplot(aes(x = Country, y = freq)) + geom_col(aes(fill = Description)) + labs(title = "Superchargers per country") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
taart <- taart %>% mutate(ratio = round(freq/sum(freq)*100))
taart %>% ggplot(aes(x="", y = ratio, fill = Description)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + labs(title = "Superchargers market share")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(tidyr)
library(plyr)
library(dplyr)
library(ggplot2)
library(lubridate)
<<<<<<< HEAD
evshare_eu %>% group_by(country, time) %>% summarise(elec_percent)
evshare_eu %>% group_by(country) %>% summarise(mean(elec_percent))
evshare_eu %>% group_by(time) %>% summarise(mean(elec_percent))
shiny::runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
View(Revenue)
runApp('Dashboard_Lien')
install.packages('shinydashboard')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
?icon
runApp('Dashboard_Lien')
runApp('Dashboard_Lien')
=======
teslapalen <- read_xlsx("Data/Superchargers.xlsx")
ionity <- read_xlsx("Data/ionity_locations.xlsx")
str(ionity)
ionity$Supercharger <- ionity$name
ionity$Stalls <- ionity$charger_count
ionity$'Open Date' <- ionity$golive
ionity$Latitude <- ionity$coords.lat
ionity$Longitude <- ionity$coords.lng
ionity$Status <- ionity$description
ionity$Description <- ionity$title
ionity$Country <- ionity$geo_state.country
ionity$City <- ionity$city
ionity$State <- ionity$geo_state.name_en
ionity <- ionity %>% filter(Status != 'now building' | Status != 'Now building')
ionity <- ionity %>% select(Supercharger, Stalls, `Open Date`, Latitude, Longitude, Description, City, State, Country)
teslapalen <- teslapalen %>% separate(GPS, sep = ",", into = c("Latitude", "Longitude"))
teslapalen$Longitude <- as.double(teslapalen$Longitude)
teslapalen$Latitude <- as.double(teslapalen$Latitude)
teslapalen <- teslapalen %>% mutate(Description = 'Tesla') %>% filter(Status == 'OPEN') %>% select(Supercharger, Stalls, `Open Date`, Latitude, Longitude, Description, City, State, Country)
ionity$`Open Date` <- as.POSIXct(ionity$`Open Date`, format = "%Y-%m-%d %H:%M")
laadpalen <- bind_rows(ionity, teslapalen)
laadpalen$Country <- as.factor(laadpalen$Country)
taart <- count(laadpalen, "Description")
laadpalen <- count(laadpalen, c("Description", "Country"))
laadpalen %>% ggplot(aes(x = Description, y = freq)) + geom_col() + labs(title = "Superchargers per country") + facet_wrap(Country~.)+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
laadpalen %>% ggplot(aes(x = Country, y = freq)) + geom_col(aes(fill = Description)) + labs(title = "Superchargers per country") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
taart <- taart %>% mutate(ratio = round(freq/sum(freq)*100))
taart %>% ggplot(aes(x="", y = ratio, fill = Description)) + geom_bar(width = 1, stat = "identity") + coord_polar("y", start=0) + labs(title = "Superchargers market share")
runApp('Dashboard_Caro')
View(superchargers)
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
install.packages("DT")
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
runApp('Dashboard_Caro')
>>>>>>> d93e79971c7bbc6fc5d8aa95a5e499a92e759ba7
